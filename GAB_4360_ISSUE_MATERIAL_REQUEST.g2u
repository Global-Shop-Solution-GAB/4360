Program.Sub.ScreenSU.Start
Gui.F_IssueRequest..Create(BaseForm)
Gui.F_IssueRequest..Caption("Issue Material from Request")
Gui.F_IssueRequest..Size(19140,9825)
Gui.F_IssueRequest..MinX(0)
Gui.F_IssueRequest..MinY(0)
Gui.F_IssueRequest..Position(0,0)
Gui.F_IssueRequest..BackColor(-2147483633)
Gui.F_IssueRequest..MousePointer(0)
Gui.F_IssueRequest..Event(UnLoad,Unload)
Gui.F_IssueRequest..Sizeable(True)
Gui.F_IssueRequest..AlwaysOnTop(False)
Gui.F_IssueRequest..FontName("Tahoma")
Gui.F_IssueRequest..FontSize(8.25)
Gui.F_IssueRequest..ControlBox(True)
Gui.F_IssueRequest..MaxButton(True)
Gui.F_IssueRequest..MinButton(True)
Gui.F_IssueRequest..Moveable(True)
Gui.F_IssueRequest..ShowInTaskBar(True)
Gui.F_IssueRequest..TitleBar(True)
Gui.F_IssueRequest.lbl1.Create(Label,"Issuance Area",True,1935,255,0,75,150,True,0,"Arial",9,-2147483633,0,0)
Gui.F_IssueRequest.lbl1.BorderStyle(0)
Gui.F_IssueRequest.ddlArea.Create(DropDownList)
Gui.F_IssueRequest.ddlArea.Size(3270,345)
Gui.F_IssueRequest.ddlArea.Position(75,375)
Gui.F_IssueRequest.ddlArea.FontSize(9)
Gui.F_IssueRequest.ddlArea.Enabled(True)
Gui.F_IssueRequest.ddlArea.Visible(True)
Gui.F_IssueRequest.ddlArea.Zorder(0)
Gui.F_IssueRequest.ddlArea.FontName("Tahoma")
Gui.F_IssueRequest.cmdRefresh.Create(Button)
Gui.F_IssueRequest.cmdRefresh.Size(1125,585)
Gui.F_IssueRequest.cmdRefresh.Position(3510,150)
Gui.F_IssueRequest.cmdRefresh.Caption("REFRESH")
Gui.F_IssueRequest.cmdRefresh.FontSize(9)
Gui.F_IssueRequest.cmdRefresh.Event(Click,cmdRefresh_Click)
Gui.F_IssueRequest.cmdRefresh.Enabled(True)
Gui.F_IssueRequest.cmdRefresh.Visible(True)
Gui.F_IssueRequest.cmdRefresh.Zorder(0)
Gui.F_IssueRequest.cmdRefresh.FontName("Tahoma")
Gui.F_IssueRequest.cmdExport.Create(Button)
Gui.F_IssueRequest.cmdExport.Size(1500,585)
Gui.F_IssueRequest.cmdExport.Position(4770,150)
Gui.F_IssueRequest.cmdExport.Caption("Export Grid")
Gui.F_IssueRequest.cmdExport.FontSize(9)
Gui.F_IssueRequest.cmdExport.Event(Click,ExportGrid)
Gui.F_IssueRequest.cmdExport.Enabled(True)
Gui.F_IssueRequest.cmdExport.Visible(True)
Gui.F_IssueRequest.cmdExport.Zorder(0)
Gui.F_IssueRequest.cmdExport.FontName("Tahoma")
Gui.F_IssueRequest.frameLotBin.Create(Frame)
Gui.F_IssueRequest.frameLotBin.Size(13005,2895)
Gui.F_IssueRequest.frameLotBin.Position(75,6300)
Gui.F_IssueRequest.frameLotBin.Caption("Lot/Bin")
Gui.F_IssueRequest.frameLotBin.FontSize(9)
Gui.F_IssueRequest.frameLotBin.Enabled(True)
Gui.F_IssueRequest.frameLotBin.Visible(True)
Gui.F_IssueRequest.frameLotBin.Zorder(0)
Gui.F_IssueRequest.frameLotBin.FontName("Tahoma")
Gui.F_IssueRequest.frameLotBin.Anchor(7)
Gui.F_IssueRequest.GsGCLot.Create(GsGridControl)
Gui.F_IssueRequest.GsGCLot.Size(11400,2580)
Gui.F_IssueRequest.GsGCLot.Position(90,240)
Gui.F_IssueRequest.GsGCLot.Parent("frameLotBin")
Gui.F_IssueRequest.GsGCLot.Event(CellValueChanged,gvLot_CheckBox)
Gui.F_IssueRequest.GsGCLot.Enabled(True)
Gui.F_IssueRequest.GsGCLot.Visible(True)
Gui.F_IssueRequest.GsGCLot.Zorder(0)
Gui.F_IssueRequest.GsGCLot.Anchor(7)
Gui.F_IssueRequest.cmdCancel.Create(Button)
Gui.F_IssueRequest.cmdCancel.Size(1320,465)
Gui.F_IssueRequest.cmdCancel.Position(11595,795)
Gui.F_IssueRequest.cmdCancel.Parent("frameLotBin")
Gui.F_IssueRequest.cmdCancel.Caption("Cancel")
Gui.F_IssueRequest.cmdCancel.FontSize(9)
Gui.F_IssueRequest.cmdCancel.Event(Click,LotBin_Cancel)
Gui.F_IssueRequest.cmdCancel.Enabled(True)
Gui.F_IssueRequest.cmdCancel.Visible(True)
Gui.F_IssueRequest.cmdCancel.Zorder(0)
Gui.F_IssueRequest.cmdCancel.FontName("Tahoma")
Gui.F_IssueRequest.cmdIssue.Create(Button)
Gui.F_IssueRequest.cmdIssue.Size(1320,465)
Gui.F_IssueRequest.cmdIssue.Position(11595,240)
Gui.F_IssueRequest.cmdIssue.Parent("frameLotBin")
Gui.F_IssueRequest.cmdIssue.Caption("Issue")
Gui.F_IssueRequest.cmdIssue.FontSize(9)
Gui.F_IssueRequest.cmdIssue.Event(Click,LotBin_Issue)
Gui.F_IssueRequest.cmdIssue.Enabled(True)
Gui.F_IssueRequest.cmdIssue.Visible(True)
Gui.F_IssueRequest.cmdIssue.Zorder(0)
Gui.F_IssueRequest.cmdIssue.FontName("Tahoma")
Gui.F_IssueRequest.cmdPrint.Create(Button)
Gui.F_IssueRequest.cmdPrint.Size(1500,585)
Gui.F_IssueRequest.cmdPrint.Position(6405,150)
Gui.F_IssueRequest.cmdPrint.Caption("Print Audit Trail")
Gui.F_IssueRequest.cmdPrint.FontSize(9)
Gui.F_IssueRequest.cmdPrint.Event(Click,PrintAuditTrail)
Gui.F_IssueRequest.cmdPrint.Enabled(True)
Gui.F_IssueRequest.cmdPrint.Visible(True)
Gui.F_IssueRequest.cmdPrint.Zorder(0)
Gui.F_IssueRequest.cmdPrint.FontName("Tahoma")
Gui.F_IssueRequest.GsGCRequest.Create(GsGridControl)
Gui.F_IssueRequest.GsGCRequest.Size(18705,5295)
Gui.F_IssueRequest.GsGCRequest.Position(75,885)
Gui.F_IssueRequest.GsGCRequest.Event(RowCellClick,gvReq_Issue)
Gui.F_IssueRequest.GsGCRequest.Enabled(True)
Gui.F_IssueRequest.GsGCRequest.Visible(True)
Gui.F_IssueRequest.GsGCRequest.Zorder(0)
Gui.F_IssueRequest.GsGCRequest.Anchor(13)
Gui.F_Labels..Create(BaseForm)
Gui.F_Labels..Caption("Print Labels - Issue Material Request (4360)")
Gui.F_Labels..Size(11880,5250)
Gui.F_Labels..MinX(0)
Gui.F_Labels..MinY(0)
Gui.F_Labels..Position(0,0)
Gui.F_Labels..AlwaysOnTop(True)
Gui.F_Labels..FontName("Tahoma")
Gui.F_Labels..FontSize(8.25)
Gui.F_Labels..ControlBox(True)
Gui.F_Labels..MaxButton(True)
Gui.F_Labels..MinButton(True)
Gui.F_Labels..MousePointer(0)
Gui.F_Labels..Moveable(True)
Gui.F_Labels..Sizeable(True)
Gui.F_Labels..ShowInTaskBar(True)
Gui.F_Labels..TitleBar(True)
Gui.F_Labels..Event(UnLoad,F_Labels_UnLoad)
Gui.F_Labels.frameGridView.Create(Frame)
Gui.F_Labels.frameGridView.Enabled(True)
Gui.F_Labels.frameGridView.Visible(True)
Gui.F_Labels.frameGridView.Zorder(0)
Gui.F_Labels.frameGridView.Size(11520,4020)
Gui.F_Labels.frameGridView.Position(135,120)
Gui.F_Labels.frameGridView.Caption("")
Gui.F_Labels.frameGridView.FontName("Tahoma")
Gui.F_Labels.frameGridView.FontSize(8.25)
Gui.F_Labels.frameGridView.Anchor(15)
Gui.F_Labels.GsGcLabels.Create(GsGridControl)
Gui.F_Labels.GsGcLabels.Enabled(True)
Gui.F_Labels.GsGcLabels.Visible(True)
Gui.F_Labels.GsGcLabels.Zorder(0)
Gui.F_Labels.GsGcLabels.Size(11520,4020)
Gui.F_Labels.GsGcLabels.Position(0,0)
Gui.F_Labels.GsGcLabels.Dock(5)
Gui.F_Labels.GsGcLabels.Parent("frameGridView")
Gui.F_Labels.GsGcLabels.Event(CellValueChanged,GsGcLabels_CellValueChanged)
Gui.F_Labels.GsGcLabels.Anchor(15)
Gui.F_Labels.framePrint.Create(Frame)
Gui.F_Labels.framePrint.Enabled(True)
Gui.F_Labels.framePrint.Visible(True)
Gui.F_Labels.framePrint.Zorder(0)
Gui.F_Labels.framePrint.Size(11520,525)
Gui.F_Labels.framePrint.Position(150,4215)
Gui.F_Labels.framePrint.Caption("")
Gui.F_Labels.framePrint.FontName("Tahoma")
Gui.F_Labels.framePrint.FontSize(8.25)
Gui.F_Labels.framePrint.Anchor(14)
Gui.F_Labels.cmdPrintLabel.Create(Button)
Gui.F_Labels.cmdPrintLabel.Enabled(True)
Gui.F_Labels.cmdPrintLabel.Visible(True)
Gui.F_Labels.cmdPrintLabel.Zorder(0)
Gui.F_Labels.cmdPrintLabel.Size(1245,345)
Gui.F_Labels.cmdPrintLabel.Position(120,120)
Gui.F_Labels.cmdPrintLabel.Caption("Print")
Gui.F_Labels.cmdPrintLabel.FontName("Tahoma")
Gui.F_Labels.cmdPrintLabel.FontSize(8.25)
Gui.F_Labels.cmdPrintLabel.Parent("framePrint")
Gui.F_Labels.cmdPrintLabel.Event(Click,cmdPrintLabel_Click)
Gui.F_Labels.cmdPrintLabel.SvgPicture("icon_printer_color")
Gui.F_Labels.lblPrinter.Create(Label,"Printer",True,570,240,0,2025,150,True,0,"Tahoma",10,,0,0)
Gui.F_Labels.lblPrinter.BorderStyle(0)
Gui.F_Labels.lblPrinter.Parent("framePrint")
Gui.F_Labels.ddlPrinter.Create(DropDownList)
Gui.F_Labels.ddlPrinter.Enabled(True)
Gui.F_Labels.ddlPrinter.Visible(True)
Gui.F_Labels.ddlPrinter.Zorder(0)
Gui.F_Labels.ddlPrinter.Size(2760,300)
Gui.F_Labels.ddlPrinter.Position(2760,120)
Gui.F_Labels.ddlPrinter.FontName("Tahoma")
Gui.F_Labels.ddlPrinter.FontSize(8.25)
Gui.F_Labels.ddlPrinter.Parent("framePrint")
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
V.Global.bIssue.Declare
V.Global.bLock.Declare
V.Global.iBISeq.Declare(Long,1)
V.Global.iLot.Declare
V.Global.iReq.Declare
V.Global.sError.Declare

V.Global.sReportName.Declare(String,"GAB_4360_Issue_Material.lab")
V.Global.iRptID.Declare(Long,-1)
V.Global.bRptSeqActive.Declare(Boolean,False)
V.Global.iBIRunID.Declare(Long,-1)
V.Global.iBILogID.Declare(Long,-1)
V.Global.sPrinter.Declare(String,"")
V.Global.iCopies.Declare(String)
V.Global.bSentinelActive.Declare(Boolean,False)
V.Global.bCannotIssueMatlToClosedWO.Declare(Boolean)
V.Global.bCannotChargeToClosedWO.Declare(Boolean)

Program.External.Include.Library("450100.lib")

F.Data.DataTable.Create("dtLabels",True)
F.Data.DataTable.AddColumn("dtLabels","ReqID","Long")
F.Data.DataTable.AddColumn("dtLabels","ReqLine","Long")
F.Data.DataTable.AddColumn("dtLabels","Part","String")
F.Data.DataTable.AddColumn("dtLabels","Description","String")
F.Data.DataTable.AddColumn("dtLabels","DateIssued","String")
F.Data.DataTable.AddColumn("dtLabels","QtyIssued","Float")
F.Data.DataTable.AddColumn("dtLabels","Lot","String")
F.Data.DataTable.AddColumn("dtLabels","Bin","String")
F.Data.DataTable.AddColumn("dtLabels","Heat","String")
F.Data.DataTable.AddColumn("dtLabels","Serial","String")
F.Data.DataTable.AddColumn("dtLabels","WONumber","String")
F.Data.DataTable.AddColumn("dtLabels","WOSuffix","String")
F.Data.DataTable.AddColumn("dtLabels","WOSeq","String")
F.Data.DataTable.AddColumn("dtLabels","OldPartNum","String")
F.Data.DataTable.AddColumn("dtLabels","LABEL_COPY","Float")
F.Data.DataTable.AddColumn("dtLabels","QtyOnLabel","Float")
Program.Sub.Preflight.End

Program.Sub.Main.Start
V.Local.bExist.Declare
V.Local.i1.Declare
V.Local.sFilter.Declare
V.Local.sIcon.Declare
V.Local.sQuery.Declare
V.Local.sRet.Declare
V.Local.sReportFilename.Declare
V.Local.iRet.Declare(Long)

'F.Intrinsic.String.Build("{0}\GAB\GAS\gss2.ico",V.Caller.PluginsDir,v.Local.sIcon)
F.Intrinsic.String.Build("{0}\ART\gss2.ico",V.Caller.GlobalDir,v.Local.sIcon)
Gui.F_IssueRequest..Icon(V.Local.sIcon)

F.ODBC.Connection!conx.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass,600)
F.ODBC.Connection!conc.OpenCommonConnection

F.ODBC.Connection!conx.TableExists("INA_MAT_REQ_HEAD",V.Local.bExist)
F.Intrinsic.Control.If(V.Local.bExist,=,False)
	F.Intrinsic.UI.Msgbox("Material Request table has not been setup. Please place a material request before opening this menu","Issue Material Request [ARC 4360]")
	F.ODBC.Connection!conx.Close
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndIf

F.ODBC.Connection!conx.TableExists("INA_SFDC_AREA",V.Local.bExist)
F.Intrinsic.Control.If(V.Local.bExist,=,True)
	F.Data.DataTable.CreateFromSQL("dtArea","conx","select ID, area as Area from ina_sfdc_area order by area",True)
F.Intrinsic.Control.else
	F.Data.DataTable.Create("dtArea",True)
	F.Data.DataTable.AddColumn("dtArea","ID","Long")
	F.Data.DataTable.AddColumn("dtArea","Area","String")
F.Intrinsic.Control.EndIf
F.Data.DataTable.AddRow("dtArea","ID",0,"Area","***NOT SPECIFIED***")
F.Data.DataTable.AddRow("dtArea","ID",99999,"Area","All Areas")
F.Intrinsic.Control.For(V.Local.i1,V.DataTable.dtArea.RowCount--,0,-1)
	Gui.F_IssueRequest.ddlArea.AddItem(V.DataTable.dtArea(V.Local.i1).Area!FieldValTrim)
F.Intrinsic.Control.Next(V.Local.i1)
Gui.F_IssueRequest.ddlArea.Text("All Areas")
F.Data.DataTable.CreateFromSQL("dtPartInfo","Conx","select i1.part as Part, i1.location as Loc, i1.description as Description1, i2.description_2 as Description2, i2.description_3 as Description3, i1.um_inventory as UM, i1.qty_onhand as Onhand from v_inventory_mstr i1 left join v_inventory_mst2 i2 on i1.part = i2.part and i1.location = i2.location",True) 
'F.Data.DataTable.CreateFromSQL("dtUserID","conC","select gs_user as UserID, first_name as FirstName, last_name as LastName from user_information",True)
F.Data.DataTable.CreateFromSQL("dtEmployee","conx","select employee as ID, name as Name from v_employee_mstr",True)
F.Intrinsic.Control.CallSub(cmdrefresh_click)

'Check whether 'Do Not Allow Material to be Issued/Received to Closed Word Orders' is activated
F.Global.General.ReadOption(401225,0,False,0,V.Global.bCannotIssueMatlToClosedWO)

'Check whether 'Do Not Allow any Charges to Closed Work Orders' is activated
F.Global.General.ReadOption(401226,0,False,0,V.Global.bCannotChargeToClosedWO)
	
'Retrieve the Report ID for the Label
F.Global.BI.GetIDFromName(v.Global.sReportName,True,v.Global.iRptID)

'Check whether there is the report sequence is active on the Report ID. Only checking for Seq: 0
F.Global.BI.IsReportSequenceActive(v.Global.iRptID,10,v.Caller.CompanyCode,v.Global.bRptSeqActive)

'Check whether Sentinel Active
F.ODBC.Connection!conc.ExecuteAndReturn("select COUNT(*) AS SentinelPrinterCount from SERVER_PRINTERS where SENTINELENABLED = 1;",v.Local.iRet)
F.Intrinsic.Control.If(v.Local.iRet,>,0)
	v.Global.bSentinelActive.Set(True)
F.Intrinsic.Control.EndIf

'Clear out the BI_SF_AUDIT table and open a connection to the table for audit trail data input
F.Intrinsic.String.Build("DELETE FROM BI_SF_AUDIT WHERE TRMNL = '{0}'",V.Caller.Terminal,V.Local.sQuery)
F.ODBC.Connection!conx.Execute(V.Local.sQuery)
Gui.F_IssueRequest.frameLotBin.Enabled(False)
Gui.F_IssueRequest..Show
Program.Sub.Main.End

Program.Sub.Unload.Start
F.Intrinsic.Control.If(V.DataTable.dtRequest.Exists,=,True)
	F.Intrinsic.Control.If(V.DataView.dtRequest!dvRequest.Exists,=,True)
		F.Data.DataView.Close("dtRequest","dvRequest")
	F.Intrinsic.Control.EndIf
	F.Data.DataTable.Close("dtRequest")
F.Intrinsic.Control.EndIf
'F.Data.DataTable.Close("dtUserID")
F.Data.DataTable.Close("dtEmployee")
F.Data.DataTable.Close("dtPartInfo")
F.Data.DataTable.Close("dtArea")
F.Data.DataTable.Close("dtLabels")
F.ODBC.Connection!conc.Close
F.ODBC.Connection!conx.Close

Gui.F_Labels..SaveSettings

F.Intrinsic.Control.End
Program.Sub.Unload.End

Program.Sub.cmdRefresh_Click.Start
V.Local.fIssue.Declare
V.Local.fOnhand.Declare
V.Local.fRequest.Declare
V.Local.i1.Declare(Long)
V.Local.i2.Declare
V.Local.iIndex.Declare
V.Local.sArea.Declare
V.Local.sDescription.Declare
V.Local.sFilter.Declare
V.Local.sName.Declare
V.Local.sQuery.Declare
V.Local.sRet.Declare
V.Local.sUM.Declare

Gui.F_IssueRequest.GsGCRequest.visible(False)
F.Intrinsic.UI.InvokeWaitDialog("Load open requests","Issue Material Request [ARC 4360]")
V.Local.sArea.Set(V.Screen.F_IssueRequest!ddlArea.Text)
F.Intrinsic.Control.If(V.DataTable.dtRequest.Exists,=,True)
	F.Intrinsic.Control.If(V.DataView.dtRequest!dvRequest.Exists,=,True)
		F.Data.DataView.Close("dtRequest","dvRequest")
	F.Intrinsic.Control.EndIf
	F.Data.DataTable.Close("dtRequest")
F.Intrinsic.Control.EndIf

F.Data.DataTable.CreateFromSQL("dtRequest","conx","select i1.req_id as ReqID, i1.req_seq as Line, i2.date_request as DateReq, i2.location as Location, '***NOT SPECIFIED***' as Area, i2.user_request as UserID, i2.employee as Employee, ' ' as Name, i1.part as Part, i1.loc as Loc, ' ' as Description, i1.job as Job, i1.Suffix as Suffix, i1.Seq as Sequence, ' ' as UM, i1.qty_req as QtyReq, i1.qty_issued as QtyIssued from INA_MAT_REQ_LINE i1 left join INA_MAT_REQ_HEAD i2 on i1.req_id = i2.id where i1.qty_req > i1.qty_issued and i1.status = 0 order by i1.req_id, i1.req_seq",True)
F.Data.DataTable.AddColumn("dtRequest","Request","Float")
F.Data.DataTable.AddColumn("dtRequest","Onhand","Float")
F.Data.DataTable.AddColumn("dtRequest","Issue","Float")
F.Data.DataTable.AddColumn("dtRequest","Submit","String")
'Complete some info: Area, Name, Description, UM, Request, Onhand, Issue
F.Intrinsic.Control.For(V.Local.iIndex,0,V.DataTable.dtRequest.RowCount--,1)
	F.Intrinsic.Math.Add(V.Local.iIndex,1,V.Local.i2)
	F.Intrinsic.UI.ChangeWaitStatus("Preparing request grid",V.Local.i2,1,V.DataTable.dtRequest.RowCount)
	'Location ID
	F.Intrinsic.String.Build("ID = {0}",V.DataTable.dtRequest(V.Local.iIndex).Location!FieldValLong,V.Local.sFilter)
	F.Data.DataTable.Select("dtArea",V.Local.sFilter,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,=,"***NORETURN***")
		V.Local.sArea.Set("***NOT FOUND***")
	F.Intrinsic.Control.Else
		V.Local.sArea.Set(V.DataTable.dtArea(V.Local.sRet).Area!FieldValTrim)
	F.Intrinsic.Control.EndIf
	'Name of user/ employee
	F.Intrinsic.Control.If(V.DataTable.dtRequest(V.Local.iIndex).UserID!FieldValTrim,=,"**SFDC**")
		F.Intrinsic.String.Build("ID = '{0}'",V.DataTable.dtRequest(V.Local.iIndex).Employee!FieldValTrim,V.Local.sFilter)
		F.Data.DataTable.Select("dtEmployee",V.Local.sFilter,V.Local.sRet)
		V.Local.sName.Set(V.DataTable.dtEmployee(V.Local.sRet).Name!FieldValTrim)
	F.Intrinsic.Control.Else
		F.Global.Security.GetFullName(V.DataTable.dtRequest(V.Local.iIndex).UserID!FieldValTrim,V.Caller.CompanyCode,V.Local.sName)
'		F.Intrinsic.String.Build("UserID = '{0}'",V.DataTable.dtRequest(V.Local.iIndex).UserID!FieldValTrim,V.Local.sFilter)
'		F.Data.DataTable.Select("dtUserID",V.Local.sFilter,V.Local.sRet)
'		F.Intrinsic.String.Build("{0} {1}",V.DataTable.dtUserID(V.Local.sRet).FirstName!FieldValTrim,V.DataTable.dtUserID(V.Local.sRet).LastName!FieldValTrim,V.Local.sName)
	F.Intrinsic.Control.EndIf
	'Part related info
	F.Intrinsic.String.Build("Part = '{0}' and Loc = '{1}'",V.DataTable.dtRequest(V.Local.iIndex).Part!FieldValTrim,V.DataTable.dtRequest(V.Local.iIndex).Loc!FieldValTrim,V.Local.sFilter)
	F.Data.DataTable.Select("dtPartInfo",V.Local.sFilter,V.Local.sRet)
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	V.Local.fOnhand.Set(V.DataTable.dtPartInfo(V.Local.sRet(0)).Onhand!FieldValFloat)
	V.Local.sUM.Set(V.DataTable.dtPartInfo(V.Local.sRet(0)).UM!FieldValTrim)
	F.Intrinsic.String.Build("{0} {1} {2}",V.DataTable.dtPartInfo(V.Local.sRet(0)).Description1!FieldValTrim,V.DataTable.dtPartInfo(V.Local.sRet(0)).Description2!FieldValTrim,V.DataTable.dtPartInfo(V.Local.sRet(0)).Description3!FieldValTrim,V.Local.sDescription)
	F.Intrinsic.Math.Sub(V.DataTable.dtRequest(V.Local.iIndex).QtyReq!FieldValFloat,V.DataTable.dtRequest(V.Local.iIndex).QtyIssued!FieldValFloat,V.Local.fRequest)
	F.Intrinsic.Control.If(V.Local.fRequest,>,V.Local.fOnhand)
		V.Local.fIssue.Set(V.Local.fOnhand)
	F.Intrinsic.Control.Else
		V.Local.fIssue.Set(V.Local.fRequest)
	F.Intrinsic.Control.EndIf
	F.Data.DataTable.SetValue("dtRequest",V.Local.iIndex,"Area",V.Local.sArea.Trim,"Name",V.Local.sName.Trim,"Description",V.Local.sDescription.Trim,"UM",V.Local.sUM.Trim,"Onhand",V.Local.fOnhand,"Request",V.Local.fRequest,"Issue",V.Local.fIssue)
F.Intrinsic.Control.Next(V.Local.iIndex)
V.Local.sArea.Set(V.Screen.F_IssueRequest!ddlArea.Text)
F.Intrinsic.Control.If(V.Local.sArea.Trim,=,"All Areas")
	V.Local.sFilter.Set("")
F.Intrinsic.Control.ElseIf(V.Local.sArea.Trim,=,"***NOT SPECIFIED***")
	V.Local.sFilter.Set("Location = 0")
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("Area = '{0}'",V.Local.sArea.Trim,V.Local.sFilter)
	F.Data.DataTable.Select("dtArea",V.Local.sFilter,V.Local.sRet)
	F.Intrinsic.String.Build("Location = {0}",V.DataTable.dtArea(V.Local.sRet).ID!FieldValLong,V.Local.sFilter)
F.Intrinsic.Control.EndIf
F.Data.DataView.Create("dtRequest","dvRequest",22,V.Local.sFilter,"ReqID ASC, Line ASC")
Gui.F_IssueRequest.GsGCRequest.AddGridviewFromDataview("gvReq","dtRequest","dvRequest")
Gui.F_IssueRequest.GsGCRequest.MainView("gvReq")
Gui.F_IssueRequest.GsGCRequest.SetGridviewProperty("gvReq","showgrouppanel",True)
Gui.F_IssueRequest.GsGCRequest.ColumnEdit("gvReq","Submit","EditorButton","Issue")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Location","Visible",False)
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","UserID","Visible",False)
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Employee","Visible",False)
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","QtyReq","Visible",False)
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","QtyIssued","Visible",False)
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","ReqID","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Line","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","DateReq","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Area","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Name","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Part","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Loc","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Description","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Job","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Suffix","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Sequence","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","UM","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Request","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Onhand","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Issue","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","ReqID","CellHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Line","CellHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Job","CellHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Suffix","CellHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Sequence","CellHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","UM","CellHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","DateReq","CellHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Loc","CellHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Submit","CellHAlignment","Center")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","ReqID","Caption","Request")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","DateReq","Caption","Request Date")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Request","Caption","Request Qty")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Onhand","Caption","Onhand Qty")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Issue","Caption","Issue Qty")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Submit","ShowCaption",False)
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Issue","CellBackColor","LtBlue")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","ReqID","Fixed","Left")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Line","Fixed","Left")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Submit","Fixed","Right")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","DateReq","DisplayCustomDatetime","d")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Request","DisplayCustomNumeric","##,###,##0.0000")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Onhand","DisplayCustomNumeric","##,###,##0.0000")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Issue","DisplayCustomNumeric","##,###,##0.0000")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","ReqID","MinWidth","60")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Line","MinWidth","40")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","DateReq","MinWidth","100")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Area","MinWidth","140")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Name","MinWidth","140")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Part","MinWidth","140")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Loc","MinWidth","40")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Description","MinWidth","300")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Job","MinWidth","60")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Suffix","MinWidth","50")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Sequence","MinWidth","60")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","UM","MinWidth","40")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Request","MinWidth","100")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Onhand","MinWidth","100")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Issue","MinWidth","100")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Submit","MinWidth","60")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Issue","ReadOnly",False)
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Issue","AllowEdit",True)
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Submit","AllowEdit",False)
F.Intrinsic.UI.CloseWaitDialog
Gui.F_IssueRequest.GsGCRequest.visible(True)
Program.Sub.cmdRefresh_Click.End

Program.Sub.gvReq_ChangeValue.Start
V.Local.fValue.Declare
F.Intrinsic.Control.If(V.Args.Column,=,"Issue")
	V.Local.fValue.set(V.Args.Value)
	F.Intrinsic.Control.If(V.Local.fValue,>,V.DataTable.dtRequest(V.Args.RowIndex).Request!FieldValFloat)
		F.Intrinsic.Control.If(V.DataTable.dtRequest(V.Args.RowIndex).Request!FieldValFloat,>,V.DataTable.dtRequest(V.Args.RowIndex).Onhand!FieldValFloat)
			F.Data.DataTable.SetValue("dtRequest",V.Args.RowIndex,"Issue",V.DataTable.dtRequest(V.Args.RowIndex).Onhand!FieldValFloat)
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.If(V.Local.fValue,<=,0)
				F.Data.DataTable.SetValue("dtRequest",V.Args.RowIndex,"Issue",0)
			F.Intrinsic.Control.Else
				F.Data.DataTable.SetValue("dtRequest",V.Args.RowIndex,"Issue",V.DataTable.dtRequest(V.Args.RowIndex).Request!FieldValFloat)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.If(V.Local.fValue,>,V.DataTable.dtRequest(V.Args.RowIndex).Onhand!FieldValFloat)
			F.Data.DataTable.SetValue("dtRequest",V.Args.RowIndex,"Issue",V.DataTable.dtRequest(V.Args.RowIndex).Onhand!FieldValFloat)
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.If(V.Local.fValue,<=,0)
				F.Data.DataTable.SetValue("dtRequest",V.Args.RowIndex,"Issue",0)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
Program.Sub.gvReq_ChangeValue.End

Program.Sub.gvReq_Issue.Start
V.Local.sQuery.Declare
V.Local.bJobClosed.Declare(Boolean)

F.Intrinsic.Control.If(V.Args.Column,=,"Submit")
F.Intrinsic.Control.AndIf(V.DataTable.dtRequest(V.Args.RowIndex).Onhand!FieldValFloat,>,0)
	'Check whether the WO is closed or not
	F.Intrinsic.String.Build("select ~(CONVERT(COUNT(*),SQL_BIT)) AS JOB_CLOSED from V_JOB_HEADER where JOB = '{0}' and SUFFIX = '{1}' AND DATE_CLOSED = '1900-01-01';",V.DataTable.dtRequest(V.Args.RowIndex).Job!FieldValTrim,V.DataTable.dtRequest(V.Args.RowIndex).Suffix!FieldValTrim,v.Local.sQuery)
	F.ODBC.Connection!conx.ExecuteAndReturn(v.Local.sQuery,v.Local.bJobClosed)
	F.Intrinsic.Control.If(v.Local.bJobClosed)
		F.Intrinsic.Control.If(v.Global.bCannotChargeToClosedWO,=,True,OR,v.Global.bCannotIssueMatlToClosedWO,=,True)
			F.Intrinsic.UI.Msgbox("WO is closed. Cannot apply any charges to it anymore.","Issue Material Request [ARC 4360]")
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	'Check issue qty
	F.Intrinsic.Control.If(V.DataTable.dtRequest(V.Args.RowIndex).Issue!FieldValFloat,>,V.DataTable.dtRequest(V.Args.RowIndex).Request!FieldValFloat)
		F.Intrinsic.Control.If(V.DataTable.dtRequest(V.Args.RowIndex).Request!FieldValFloat,>,V.DataTable.dtRequest(V.Args.RowIndex).Onhand!FieldValFloat)
			F.Data.DataTable.SetValue("dtRequest",V.Args.RowIndex,"Issue",V.DataTable.dtRequest(V.Args.RowIndex).Onhand!FieldValFloat)
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.If(V.DataTable.dtRequest(V.Args.RowIndex).Issue!FieldValFloat,<=,0)
				F.Data.DataTable.SetValue("dtRequest",V.Args.RowIndex,"Issue",0)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.Else
				F.Data.DataTable.SetValue("dtRequest",V.Args.RowIndex,"Issue",V.DataTable.dtRequest(V.Args.RowIndex).Request!FieldValFloat)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.If(V.DataTable.dtRequest(V.Args.RowIndex).Issue!FieldValFloat,>,V.DataTable.dtRequest(V.Args.RowIndex).Onhand!FieldValFloat)
			F.Data.DataTable.SetValue("dtRequest",V.Args.RowIndex,"Issue",V.DataTable.dtRequest(V.Args.RowIndex).Onhand!FieldValFloat)
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.If(V.DataTable.dtRequest(V.Args.RowIndex).Issue!FieldValFloat,<=,0)
				'If qty <= 0, cancel issue
				F.Data.DataTable.SetValue("dtRequest",V.Args.RowIndex,"Issue",0)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	Gui.F_IssueRequest.GsGCRequest.SetRowAppearance("gvReq",V.Args.RowIndex,"backcolor","Lime")
	Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Issue","ReadOnly",True)
	Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Issue","AllowEdit",False)
	Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Submit","AllowEdit",True)
	'Check for lot/bin
	F.Intrinsic.String.Build("SELECT FLAG_LOT FROM V_INVENTORY_MSTR WHERE PART = '{0}' and location = '{1}'",V.DataTable.dtRequest(V.Args.RowIndex).Part!FieldValTrim,V.DataTable.dtRequest(V.Args.RowIndex).Loc!FieldValTrim,V.Local.sQuery)
	F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sQuery)
	V.Global.iReq.Set(V.Args.RowIndex)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!FLAG_LOT,=,"Y")
		V.Global.bIssue.Set(True)
		Gui.F_IssueRequest.frameLotBin.Enabled(True)
		F.Intrinsic.Control.If(V.DataTable.dtLot.Exists,=,True)
			F.Data.DataTable.Close("dtLot")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.String.Build("SELECT LOT as Lot,BIN as Bin,HEAT as Heat,SERIAL_NUMBER as Serial, date_expiration as ExpDate, QUANTITY as Quantity FROM V_ITEM_MASTER WHERE PART = '{0}' and location = '{1}' AND QUANTITY > 0 ORDER BY DATE_LAST_REC",V.DataTable.dtRequest(V.Args.RowIndex).Part!FieldValTrim,V.DataTable.dtRequest(V.Args.RowIndex).Loc!FieldValTrim,V.Local.sQuery)
		F.Data.DataTable.CreateFromSQL("dtLot","conx",V.Local.sQuery,True)
		F.Data.DataTable.AddColumn("dtLot","Issue","Float")
		F.Data.DataTable.AddColumn("dtLot","Flag","Boolean")
		F.Data.DataTable.SetValue("dtLot",-1,"Flag",False,"Issue",0)
		Gui.F_IssueRequest.GsGCLot.AddGridviewFromDatatable("gvLot","dtLot")
		F.Intrinsic.Control.CallSub(gvlot_properties)
		Gui.F_IssueRequest.GsGCLot.MainView("gvLot")
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.CallSub(issuematerial,"fIssue",V.DataTable.dtRequest(V.Args.RowIndex).Issue!FieldValFloat)
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst.Close
F.Intrinsic.Control.EndIf
Program.Sub.gvReq_Issue.End

Program.Sub.IssueMaterial.Start
V.Local.dIssued.Declare(Date)
V.Local.fQtyIssued.Declare
V.Local.fQtyRem.Declare
V.Local.i1.Declare
V.Local.iLen.Declare
V.Local.sBin.Declare
V.Local.sDate.Declare
V.Local.sDescription.Declare
V.Local.sFile.Declare
V.Local.sFileName.Declare
V.Local.sFilter.Declare
V.Local.sHeat.Declare
V.Local.sIssueDate.Declare
V.Local.sLot.Declare
V.Local.sMessage.Declare
V.Local.sParam.Declare
V.Local.sPart.Declare
V.Local.sQtyIssue.Declare
V.Local.sQuery.Declare
V.Local.sReference.Declare
V.Local.sRev.Declare
V.Local.sRows.Declare
V.Local.sSeq.Declare
V.Local.sSerial.Declare
V.Local.sUser.Declare
V.Local.sRet.Declare
V.Local.sRetValue.Declare("String","")
v.Local.fQtyAlreadyIssued.Declare
v.Local.bIssueSuccess.Declare("Boolean","False")
v.Local.iRet.Declare
v.Local.sOldPartNumber.Declare
v.Local.sDateIssued.Declare
V.Local.sTranTimeBegin.Declare
V.Local.sTranTimeEnd.Declare

F.Intrinsic.Control.Try

	F.Intrinsic.UI.InvokeWaitDialog("Issuing selected material.......","Issue Material Request [ARC 4360]")
	
	'Clear dtLabels rows
	F.Intrinsic.Control.If(v.DataTable.dtLabels.Exists)
		F.Data.DataTable.DeleteRow("dtLabels")
	F.Intrinsic.Control.EndIf
				
	'Check if WO is currently opened by a user at x_lock_file table
	F.Intrinsic.Control.CallSub(checklockfile)
	
	F.Intrinsic.Control.If(V.Global.bLock,=,False)
		'Preparing file name to be called by callwrapper
		F.Intrinsic.String.Concat("I",V.Caller.CompanyCode,"IF",V.Caller.Terminal,V.Local.sParam)
		F.Intrinsic.String.Concat(V.Caller.FilesDir,"\",V.Local.sParam,V.Local.sFileName)
		
		V.Local.sPart.Set(V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim)
		
		F.Intrinsic.String.Len(V.Local.sPart,V.Local.iLen)
		
		F.Intrinsic.Control.If(V.Local.iLen,>,17)
			F.Intrinsic.String.Mid(V.Local.sPart,17,V.Local.sRev)
			F.Intrinsic.String.Left(V.Local.sPart,17,V.Local.sPart)
		F.Intrinsic.Control.Else
			V.Local.sRev.Set("")
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.String.Format(V.Args.fIssue,"0.0000",V.Local.sQtyIssue)
		
		'Lot/bin information if the part is flagged as lot/bin
		V.Local.sBin.Set("")
		V.Local.sHeat.Set("")
		V.Local.sLot.Set("")
		V.Local.sSerial.Set("")
		
		F.Intrinsic.String.Format(V.Ambient.Now,"HhNnSs",V.Local.sTranTimeBegin)
		F.Intrinsic.String.Concat(V.Local.sTranTimeBegin,"00",V.Local.sTranTimeBegin)
	
		'Preparing the file format
		F.Data.DataTable.AddRow("450100","Part",V.Local.sPart.Trim,"Rev",V.Local.sRev.Trim,"Location",V.DataTable.dtRequest(V.Global.iReq).Loc!FieldValTrim,"Quantity",V.Local.sQtyIssue,"Lot",V.Local.sLot.Trim,"Bin",V.Local.sBin.Trim,"Heat",V.Local.sHeat.Trim,"Serial",V.Local.sSerial.Trim,"WONumber",V.DataTable.dtRequest(V.Global.iReq).Job!FieldValTrim,"WOSuffix",V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldValTrim,"WOSeq",V.DataTable.dtRequest(V.Global.iReq).Sequence!FieldValTrim)
		F.Intrinsic.Control.CallSub(450100Sync)
	'	F.Intrinsic.String.Concat(V.Local.sPart.Trim,",",V.Local.sRev.Trim,",",V.DataTable.dtRequest(V.Global.iReq).Loc!FieldValTrim,",",V.Local.sQtyIssue.Trim,",",V.Local.sLot.Trim,",",V.Local.sBin.Trim,",",V.Local.sHeat.Trim,V.Local.sFile)
	'	F.Intrinsic.String.Concat(V.Local.sFile,",",V.Local.sSerial.Trim,",",V.DataTable.dtRequest(V.Global.iReq).Job!FieldValTrim,",",V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldValTrim,",",V.DataTable.dtRequest(V.Global.iReq).Sequence!FieldValTrim,V.Local.sFile)
	'	F.Intrinsic.File.String2File(V.Local.sFileName,V.Local.sFile)
	'	F.Global.General.CallWrapperSync(450100,V.Local.sParam)
	
		F.Intrinsic.String.Format(V.Ambient.Now,"HhNnSs",V.Local.sTranTimeEnd)
		F.Intrinsic.String.Concat(V.Local.sTranTimeEnd,"99",V.Local.sTranTimeEnd)
		
		'Check for successful processing of transactions
		F.Intrinsic.String.Format(V.Ambient.Date,"YYMMDD",V.Local.sIssueDate)
		V.Local.dIssued.Set(V.Ambient.Date)
		F.Intrinsic.Math.Mult(-1,V.Args.fIssue,V.Local.fQtyIssued)
		V.Local.sUser.Set(V.Caller.User)
'		F.Intrinsic.String.Build("select part from inventory_hist where date_history = '{0}' and part = '{1}' and job = '{2}' and suffix = '{3}' and seq = '{4}' and quantity = {5} and userid = '{6}' and code_transaction = 'J55'",V.Local.sIssueDate.Trim,V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Job!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Sequence!FieldValTrim,V.Local.fQtyIssued,V.Local.sUser.Trim,V.Local.sQuery)
		F.Intrinsic.String.Build("select part from inventory_hist where date_history = '{0}' and part = '{1}' and job = '{2}' and suffix = '{3}' and seq = '{4}' and quantity = {5} and userid = '{6}' and inv_hist_time >= '{7}' and inv_hist_time <= '{8}' and code_transaction = 'J55'",V.Local.sIssueDate.Trim,V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Job!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Sequence!FieldValTrim,V.Local.fQtyIssued,V.Local.sUser.Trim,V.Local.sTranTimeBegin,V.Local.sTranTimeEnd,V.Local.sQuery)
		F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sQuery)
		F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)
'			F.ODBC.conx!rst.Close
'			'Check JOB_TRANS_ERR if issue is failed
'			F.Intrinsic.String.Build("select description, msg_id, filename from v_job_trans_err where job = '{0}' and suffix = '{1}' and seq = '{2}' and part = '{3}' and tran_date = '{4}' and program = 'JB0320'",V.DataTable.dtRequest(V.Global.iReq).Job!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Sequence!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim,V.Local.dIssued.PervasiveDate,V.Local.sQuery)
'			F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sQuery)
'			F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)
'				F.Intrinsic.String.Build("There was an error in material issue with the following description: {1}{0}Message ID: {2}, Filename: {3}{0}For work order: {4}-{5}, sequence: {6}, part: {7}",V.Ambient.NewLine,V.ODBC.conx!rst.FieldVal!description,V.ODBC.conx!rst.FieldVal!msg_id,V.ODBC.conx!rst.FieldVal!filename,V.DataTable.dtRequest(V.Global.iReq).Job!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Sequence!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim,V.Local.sMessage)
'				F.Intrinsic.UI.Msgbox(V.Local.sMessage,"Issue Material Request [ARC 4360]")
'			F.Intrinsic.Control.Else
			
				F.Intrinsic.String.Format(V.Ambient.Now,"YYYY-MM-DD HH:NN:SS",V.Local.sIssueDate)
				
				'Adding the record to BI_SF_AUDIT for audit trail printout
				F.Intrinsic.String.LPad(V.Global.iBISeq,"0",9,V.Local.sSeq)
				F.Intrinsic.String.DateString(V.Ambient.Date,V.Local.sDate)
				F.Intrinsic.String.Left(V.DataTable.dtRequest(V.Global.iReq).Description!FieldValTrim,30,V.Local.sDescription)
				F.Intrinsic.String.Build("insert into BI_SF_AUDIT(trmnl, rptid, sequence, rec_type, trans, job, suffix, category, descr, reference, tran_date, qty_1, heading) values('{0}','001862','{1}','L','02','{2}','{3}','{4}','{5}','{6}','{7}',{8},'Audit Trail for Issue of Materials to Work Orders')",V.Caller.Terminal,V.Local.sSeq.Trim,V.DataTable.dtRequest(V.Global.iReq).Job!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Sequence!FieldValTrim,V.Local.sDescription.PSQLFriendly,V.Local.sPart.PSQLFriendly,V.Local.sDate.Trim,V.Args.fIssue,V.Local.sQuery)
				F.ODBC.Connection!conx.Execute(V.Local.sQuery)
				F.Intrinsic.Math.Add(V.Global.iBISeq,1,V.Global.iBISeq)
				F.Intrinsic.String.LPad(V.Global.iBISeq,"0",9,V.Local.sSeq)
				F.Intrinsic.String.Build("Request {0} - {1}",V.DataTable.dtRequest(V.Global.iReq).ReqID!FieldValLong,V.DataTable.dtRequest(V.Global.iReq).Line!FieldValLong,V.Local.sReference)
				F.Intrinsic.String.Build("Area: {0}",V.DataTable.dtRequest(V.Global.iReq).Area!FieldValTrim,V.Local.sDescription)
				F.Intrinsic.String.Build("insert into BI_SF_AUDIT(trmnl, rptid, sequence, rec_type, descr, reference, heading) values('{0}','001862','{1}','L','{2}','{3}','Audit Trail for Issue of Materials to Work Orders')",V.Caller.Terminal,V.Local.sSeq.Trim,V.Local.sDescription.PSQLFriendly,V.Local.sReference.Trim,V.Local.sQuery)
				F.ODBC.Connection!conx.Execute(V.Local.sQuery)
				
				F.Intrinsic.Math.Add(V.Global.iBISeq,1,V.Global.iBISeq)
				F.Intrinsic.String.LPad(V.Global.iBISeq,"0",9,V.Local.sSeq)
				F.Intrinsic.String.Build("insert into BI_SF_AUDIT(trmnl, rptid, sequence, rec_type, heading) values('{0}','001862','{1}','L1','Audit Trail for Issue of Materials to Work Orders')",V.Caller.Terminal,V.Local.sSeq.Trim,V.Local.sQuery)
				F.ODBC.Connection!conx.Execute(V.Local.sQuery)
				
				F.Intrinsic.Math.Add(V.Global.iBISeq,1,V.Global.iBISeq)			
				F.Intrinsic.Math.Add(V.DataTable.dtRequest(V.Global.iReq).QtyIssued!FieldValTrim,V.Args.fIssue,V.Local.fQtyIssued)
				F.Intrinsic.Control.If(V.DataTable.dtRequest(V.Global.iReq).QtyReq!FieldValTrim,<=,V.Local.fQtyIssued)
	'				F.Intrinsic.String.Build("update INA_MAT_REQ_LINE set qty_issued = {2}, status = 1, last_issued = '{3}' where req_id = {0} and req_seq = {1}",V.DataTable.dtRequest(V.Global.iReq).ReqID!FieldValLong,V.DataTable.dtRequest(V.Global.iReq).Line!FieldValLong,V.Local.fQtyIssued,V.Local.sIssueDate.Trim,V.Local.sQuery)
					F.Intrinsic.String.Build("update INA_MAT_REQ_LINE set qty_issued = qty_issued + {2}, status = 1, last_issued = '{3}' where req_id = {0} and req_seq = {1}",V.DataTable.dtRequest(V.Global.iReq).ReqID!FieldValLong,V.DataTable.dtRequest(V.Global.iReq).Line!FieldValLong,V.Args.fIssue,V.Local.sIssueDate.Trim,V.Local.sQuery)
					F.ODBC.Connection!conx.Execute(V.Local.sQuery)
					
					F.Intrinsic.String.Build("Part = '{0}' and Loc = '{1}'",V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Loc!FieldValTrim,V.Local.sFilter)
					F.Intrinsic.Math.Sub(V.DataTable.dtRequest(V.Global.iReq).Onhand!FieldValFloat,V.Args.fIssue,V.Local.fQtyRem)
					F.Intrinsic.Control.If(V.Local.fQtyRem,<,0)
						V.Local.fQtyRem.Set(0)
					F.Intrinsic.Control.EndIf
					F.Data.DataTable.Select("dtRequest",V.Local.sFilter,V.Local.sRows)
					F.Intrinsic.Control.If(v.Local.sRows,<>,"***NORETURN***")
						F.Intrinsic.String.Split(V.Local.sRows,"*!*",V.Local.sRows)
						F.Intrinsic.Control.For(V.Local.i1,0,V.Local.sRows.UBound,1)
							F.Data.DataTable.SetValue("dtRequest",V.Local.sRows(V.Local.i1),"Onhand",V.Local.fQtyRem)
						F.Intrinsic.Control.Next(V.Local.i1)
					F.Intrinsic.Control.EndIf
	'				F.Intrinsic.String.Split(V.Local.sRows,"*!*",V.Local.sRows)
	'				F.Intrinsic.Control.If(V.Local.sRows.UBound,>,0)
	'					F.Intrinsic.Control.For(V.Local.i1,0,V.Local.sRows.UBound,1)
	'						F.Data.DataTable.SetValue("dtRequest",V.Local.sRows(V.Local.i1),"Onhand",V.Local.fQtyRem)
	'					F.Intrinsic.Control.Next(V.Local.i1)
	'				F.Intrinsic.Control.EndIf
					F.Data.DataTable.DeleteRow("dtRequest",V.Global.iReq)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("select qty_issued from INA_MAT_REQ_LINE where req_id = {0} and req_seq = {1};",V.DataTable.dtRequest(V.Global.iReq).ReqID!FieldValLong,V.DataTable.dtRequest(V.Global.iReq).Line!FieldValLong,v.Local.sQuery)
					F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sQuery,v.Local.sRet)
					F.Intrinsic.Control.If(v.Local.sRet.Trim,=,"")
						v.Local.fQtyAlreadyIssued.Set(0)
					F.Intrinsic.Control.Else
						v.Local.fQtyAlreadyIssued.Set(v.Local.sRet.Float)
					F.Intrinsic.Control.EndIf
					F.Intrinsic.Math.Add(v.Args.fIssue,v.Local.fQtyAlreadyIssued,v.Local.fQtyAlreadyIssued)
	'				F.Intrinsic.String.Build("update INA_MAT_REQ_LINE set qty_issued = {2}, last_issued = '{3}' where req_id = {0} and req_seq = {1}",V.DataTable.dtRequest(V.Global.iReq).ReqID!FieldValLong,V.DataTable.dtRequest(V.Global.iReq).Line!FieldValLong,V.Local.fQtyIssued,V.Local.sIssueDate.Trim,V.Local.sQuery)
					F.Intrinsic.Control.If(v.Local.fQtyAlreadyIssued,>=,V.DataTable.dtRequest(V.Global.iReq).QtyReq!FieldValFloat)
						F.Intrinsic.String.Build("update INA_MAT_REQ_LINE set qty_issued = qty_issued + {2}, status = 1, last_issued = '{3}' where req_id = {0} and req_seq = {1}",V.DataTable.dtRequest(V.Global.iReq).ReqID!FieldValLong,V.DataTable.dtRequest(V.Global.iReq).Line!FieldValLong,V.Args.fIssue,V.Local.sIssueDate.Trim,V.Local.sQuery)
					F.Intrinsic.Control.Else
						F.Intrinsic.String.Build("update INA_MAT_REQ_LINE set qty_issued = qty_issued + {2}, last_issued = '{3}' where req_id = {0} and req_seq = {1}",V.DataTable.dtRequest(V.Global.iReq).ReqID!FieldValLong,V.DataTable.dtRequest(V.Global.iReq).Line!FieldValLong,V.Args.fIssue,V.Local.sIssueDate.Trim,V.Local.sQuery)
					F.Intrinsic.Control.EndIf
					F.ODBC.Connection!conx.Execute(V.Local.sQuery)
					
					F.Intrinsic.Math.Sub(V.DataTable.dtRequest(V.Global.iReq).Request!FieldVal,V.Args.fIssue,V.Local.fQtyRem)
	'				F.Data.DataTable.SetValue("dtRequest",V.Global.iReq,"Request",V.Local.fQtyRem)
					F.Data.DataTable.SetValue("dtRequest",V.Global.iReq,"Request",V.Local.fQtyRem,"Issue",V.Local.fQtyRem,"QtyIssued",v.Local.fQtyAlreadyIssued)
					
					F.Intrinsic.String.Build("Part = '{0}' and Loc = '{1}'",V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Loc!FieldValTrim,V.Local.sFilter)
					F.Intrinsic.Math.Sub(V.DataTable.dtRequest(V.Global.iReq).Onhand!FieldValFloat,V.Args.fIssue,V.Local.fQtyRem)
					F.Intrinsic.Control.If(V.Local.fQtyRem,<,0)
						V.Local.fQtyRem.Set(0)
					F.Intrinsic.Control.EndIf
					F.Data.DataTable.Select("dtRequest",V.Local.sFilter,V.Local.sRows)
					F.Intrinsic.Control.If(v.Local.sRows,<>,"***NORETURN***")
						F.Intrinsic.String.Split(V.Local.sRows,"*!*",V.Local.sRows)
						F.Intrinsic.Control.For(V.Local.i1,0,V.Local.sRows.UBound,1)
							F.Data.DataTable.SetValue("dtRequest",V.Local.sRows(V.Local.i1),"Onhand",V.Local.fQtyRem)
						F.Intrinsic.Control.Next(V.Local.i1)
					F.Intrinsic.Control.EndIf
	'				F.Intrinsic.String.Split(V.Local.sRows,"*!*",V.Local.sRows)
	'				F.Intrinsic.Control.If(V.Local.sRows.UBound,>,0)
	'					F.Intrinsic.Control.For(V.Local.i1,0,V.Local.sRows.UBound,1)
	'						F.Data.DataTable.SetValue("dtRequest",V.Local.sRows(V.Local.i1),"Onhand",V.Local.fQtyRem)
	'					F.Intrinsic.Control.Next(V.Local.i1)
	'				F.Intrinsic.Control.EndIf
					Gui.F_IssueRequest.GsGCRequest.SetRowAppearance("gvReq",V.Global.iReq,"backcolor","White")
					F.Intrinsic.Control.If(v.Local.fQtyAlreadyIssued,>=,V.DataTable.dtRequest(V.Global.iReq).QtyReq!FieldValFloat)
						F.Data.DataTable.DeleteRow("dtRequest",V.Global.iReq)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
				
				v.Local.bIssueSuccess.Set(True)
				
'			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.Else
'			
			F.Intrinsic.String.Build("There was an error in material issue:{0}Request: {1}  Line: {2}{0}Work Order: {3}-{4}  sequence: {5}{0}Part: {6}",V.Ambient.NewLine,V.DataTable.dtRequest(V.Global.iReq).ReqID!FieldValLong,V.DataTable.dtRequest(V.Global.iReq).Line!FieldValLong,V.DataTable.dtRequest(V.Global.iReq).Job!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Sequence!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim,V.Local.sMessage)
			F.Intrinsic.UI.Msgbox(V.Local.sMessage,"Issue Material Request [ARC 4360]")

		F.Intrinsic.Control.EndIf
		F.ODBC.conx!rst.Close
	F.Intrinsic.Control.EndIf
	Gui.F_IssueRequest.frameLotBin.Enabled(False)
	Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Issue","ReadOnly",False)
	Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Issue","AllowEdit",True)
	Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Submit","AllowEdit",False)
	F.Intrinsic.UI.CloseWaitDialog
	
	'Check whether the Issue is successfull
	F.Intrinsic.Control.If(v.Local.bIssueSuccess)
	
		'Ask whether to print Label if Report is activated
		F.Intrinsic.Control.If(v.Global.iRptID,!=,-1,AND,v.Global.bRptSeqActive,=,True,v.Global.bSentinelActive,=,True)
			F.Intrinsic.UI.Msgbox("Print Label?","Issue Material Request [ARC 4360]",4,v.Local.iRet)
			F.Intrinsic.Control.If(v.Local.iRet,=,6)
				
				'This is specific to TEST TOOLING SOLUTIONS only
				F.Intrinsic.String.Build("select USER_DEFINED_PART from INV_CROSS_REF where VENDOR = '' AND MFG_PART = 'TTS' AND PART = '{0}';",V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim,v.Local.sQuery)
				F.ODBC.Connection!conx.ExecuteAndReturn(v.Local.sQuery,v.Local.sRetValue)
				F.Intrinsic.Control.If(v.Local.sRetValue.Trim,!=,"")
					f.Intrinsic.String.Split(v.Local.sRetValue,"#$#",v.Local.sRetValue)
					v.Local.sOldPartNumber.Set(v.Local.sRetValue(0).Trim)
				F.Intrinsic.Control.Else
					v.Local.sOldPartNumber.Set("")
				F.Intrinsic.Control.EndIf
								
				'Format Date Issued as String
				F.Intrinsic.String.Format(v.Local.dIssued,"d-mmm-yyyy",v.Local.sDateIssued)
				
				'Populate dtLabels
				F.Data.DataTable.AddRow("dtLabels","ReqID",V.DataTable.dtRequest(V.Global.iReq).ReqID!FieldVal,"ReqLine",V.DataTable.dtRequest(V.Global.iReq).Line!FieldVal,"Part",V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim,"Description",V.DataTable.dtRequest(V.Global.iReq).Description!FieldValTrim,"DateIssued",v.Local.sDateIssued,"QtyIssued",V.Args.fIssue,"Lot",V.Local.sLot.Trim,"Bin",V.Local.sBin.Trim,"Heat",V.Local.sHeat.Trim,"Serial",V.Local.sSerial.Trim,"WONumber",V.DataTable.dtRequest(V.Global.iReq).Job!FieldValTrim,"WOSuffix",V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldValTrim,"WOSeq",V.DataTable.dtRequest(V.Global.iReq).Sequence!FieldValTrim,"OldPartNum",v.Local.sOldPartNumber,"QtyOnLabel",V.Args.fIssue,"LABEL_COPY",1)
				
				
				Gui.F_Labels.GsGcLabels.AddGridviewFromDatatable("gvLabels","dtLabels")
				Gui.F_Labels.GsGcLabels.MainView("gvLabels")
				
				F.Intrinsic.Control.CallSub(FormatGvLabels)
				
				'Initialize Printer
				f.Intrinsic.Control.CallSub(InitializePrinter)
				
				Gui.F_Labels..Show
				Gui.F_Labels..SetFocus
				
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
	F.Intrinsic.UI.Msgbox(V.Global.sError)
	F.Intrinsic.Control.CallSub(Unload)
F.Intrinsic.Control.EndTry
Program.Sub.IssueMaterial.End

Program.Sub.F_Labels_UnLoad.Start
	F.Intrinsic.Control.Try
		
		Gui.F_Labels..Visible(False)
		Gui.F_IssueRequest..SetFocus
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.CallSub(Unload)
	F.Intrinsic.Control.EndTry
Program.Sub.F_Labels_UnLoad.End

Program.Sub.FormatGvLabels.Start
	F.Intrinsic.Control.Try
	
		'Set GridView Property
		Gui.F_Labels.GsGcLabels.SetGridViewProperty("gvLabels","AllowSort",False)
		Gui.F_Labels.GsGcLabels.SetGridViewProperty("gvLabels","AllowFilter",False)
		Gui.F_Labels.GsGcLabels.SetGridViewProperty("gvLabels","OptionsViewShowGroupPanel",False)
		Gui.F_Labels.GsGcLabels.SetGridViewProperty("gvLabels","EnableAppearanceOddRow",True)
		Gui.F_Labels.GsGcLabels.SetGridViewProperty("gvLabels","OptionsViewColumnAutoWidth",False)
		
		'Hide Column
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","Description","Visible",False)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","DateIssued","Visible",False)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","WONumber","Visible",False)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","WOSuffix","Visible",False)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","WOSeq","Visible",False)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","OldPartNum","Visible",False)
		
		'Set Column Header Caption
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","ReqID","Caption","Req ID")
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","ReqLine","Caption","Req Line")
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","QtyIssued","Caption","Qty Issued")
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","LABEL_COPY","Caption","Num of Labels")
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","QtyOnLabel","Caption","Qty on Label")
		
		'Set Column Header Font Style
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","ReqID","HeaderFontBold",True)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","ReqLine","HeaderFontBold",True)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","Part","HeaderFontBold",True)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","Lot","HeaderFontBold",True)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","Bin","HeaderFontBold",True)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","Heat","HeaderFontBold",True)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","Serial","HeaderFontBold",True)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","QtyIssued","HeaderFontBold",True)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","LABEL_COPY","HeaderFontBold",True)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","QtyOnLabel","HeaderFontBold",True)
		
		'Set Column Width
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","ReqID","MinWidth",50)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","ReqLine","MinWidth",50)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","Part","MinWidth",120)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","Lot","MinWidth",100)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","Bin","MinWidth",60)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","Heat","MinWidth",150)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","Serial","MinWidth",150)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","QtyIssued","MinWidth",90)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","LABEL_COPY","MinWidth",60)
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","QtyOnLabel","MinWidth",60)
		
		'Set Column Cell Format
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","QtyIssued","DisplayCustomNumeric","#,##0.00")
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","LABEL_COPY","DisplayCustomNumeric","#,##0")
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","QtyOnLabel","DisplayCustomNumeric","#,##0.00")
		
		'Set Column Cell Read/Write
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","LABEL_COPY","ReadOnly",False)
		
		'Set Column Cell Editable
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","LABEL_COPY","AllowEdit",True)
		
		'Set the Column Cell Color for Editable column
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","LABEL_COPY","CellBackColor",v.Color.Yellow)
		
		'Set the Fixed Column on the right side
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","LABEL_COPY","Fixed","Right")
		Gui.F_Labels.GsGcLabels.SetColumnProperty("gvLabels","QtyOnLabel","Fixed","Right")
		
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.CallSub(Unload)
	F.Intrinsic.Control.EndTry
Program.Sub.FormatGvLabels.End


Program.Sub.gvLot_Properties.Start
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","Serial","Caption","Serial Number")
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","ExpDate","Caption","Expiration Date")
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","Flag","ShowCaption",False)
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","Lot","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","Bin","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","Heat","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","Serial","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","ExpDate","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","Quantity","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","Issue","HeaderHAlignment","Center")
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","Lot","CellHAlignment","Center")
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","Bin","CellHAlignment","Center")
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","Heat","CellHAlignment","Center")
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","ExpDate","CellHAlignment","Center")
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","ExpDate","DisplayCustomDatetime","d")
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","Quantity","DisplayCustomNumeric","##,###,##0.0000")
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","Issue","DisplayCustomNumeric","##,###,##0.0000")
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","Flag","ReadOnly",False)
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","Flag","AllowEdit",True)
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","Issue","ReadOnly",False)
Gui.F_IssueRequest.GsGCLot.SetColumnProperty("gvLot","Issue","AllowEdit",True)
Program.Sub.gvLot_Properties.End

Program.Sub.gvLot_CheckBox.Start
V.Local.fIssue.Declare
V.Local.fRem.Declare
V.Local.fTotal1.Declare
V.Local.fTotal2.Declare

F.Intrinsic.Control.If(V.Args.Column,=,"Flag")
	F.Intrinsic.Control.If(V.Args.Value,=,True)
		F.Data.DataTable.Compute("dtLot","SUM(Issue)","",V.Local.fTotal2)
		V.Local.fTotal1.Set(V.DataTable.dtRequest(V.Global.iReq).Issue!FieldValFloat)
		F.Intrinsic.Math.Sub(V.Local.fTotal1,V.Local.fTotal2,V.Local.fIssue)
		F.Intrinsic.Control.If(V.Local.fIssue,>,0)
			F.Intrinsic.Control.If(V.Local.fIssue,>,V.DataTable.dtLot(V.Args.RowIndex).Quantity!FieldValFloat)
				F.Data.DataTable.SetValue("dtLot",V.Args.RowIndex,"Issue",V.DataTable.dtLot(V.Args.RowIndex).Quantity!FieldValFloat)
			F.Intrinsic.Control.Else
				F.Data.DataTable.SetValue("dtLot",V.Args.RowIndex,"Issue",V.Local.fIssue)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Data.DataTable.SetValue("dtLot",V.Args.RowIndex,"Issue",0)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.ElseIf(V.Args.Column,=,"Issue")
	V.Local.fIssue.Set(V.Args.Value)
	F.Intrinsic.Control.If(V.Local.fIssue,>,0)
		V.Local.fTotal1.Set(V.DataTable.dtRequest(V.Global.iReq).Issue!FieldValFloat)
		F.Data.DataTable.Compute("dtLot","SUM(Issue)","",V.Local.fTotal2)
		F.Intrinsic.Control.If(V.Local.fTotal2,>,V.Local.fTotal1)
			F.Intrinsic.Math.Sub(V.Local.fTotal2,V.Local.fTotal1,V.Local.fRem)
			F.Intrinsic.Control.If(V.Local.fRem,>=,V.Local.fIssue)
				F.Data.DataTable.SetValue("dtLot",V.Args.RowIndex,"Issue",0)
			F.Intrinsic.Control.Else
				F.Intrinsic.Math.sub(V.Local.fIssue,V.Local.fRem,V.Local.fIssue)
				F.Data.DataTable.SetValue("dtLot",V.Args.RowIndex,"Issue",V.Local.fIssue)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.else
		F.Data.DataTable.SetValue("dtLot",V.Args.RowIndex,"Issue",0)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
Program.Sub.gvLot_CheckBox.End

Program.Sub.LotBin_Issue.Start
V.Local.dIssued.Declare(Date)
V.Local.fQtyIssued.Declare
V.Local.fQtyRem.Declare
V.Local.fTotal.Declare
V.Local.i1.Declare
V.Local.iLen.Declare
V.Local.sBin.Declare
V.Local.sDate.Declare
V.Local.sDescription.Declare
V.Local.sFile.Declare
V.Local.sFileName.Declare
V.Local.sFilter.Declare
V.Local.sHeat.Declare
V.Local.sIssueDate.Declare
V.Local.sLot.Declare
V.Local.sMessage.Declare
V.Local.sParam.Declare
V.Local.sPart.Declare
V.Local.sQtyIssue.Declare
V.Local.sQuery.Declare
V.Local.sReference.Declare
V.Local.sRev.Declare
V.Local.sRows.Declare
V.Local.sSeq.Declare
V.Local.sSerial.Declare
V.Local.sUser.Declare
V.Local.sRet.Declare
v.Local.fQtyAlreadyIssued.Declare
v.Local.bIssueSuccess.Declare("Boolean","False")
v.Local.iRet.Declare
v.Local.sOldPartNumber.Declare
v.Local.sDateIssued.Declare
v.Local.sRetValue.Declare
V.Local.sTranTimeBegin.Declare
V.Local.sTranTimeEnd.Declare

F.Data.DataTable.Compute("dtLot","SUM(Issue)","",V.Local.fTotal)
F.Intrinsic.Control.If(V.Local.fTotal,>,0)
	F.Intrinsic.UI.InvokeWaitDialog("Issuing selected material.......","Issue Material Request [ARC 4360]")
	
	'Clear dtLabels rows
	F.Intrinsic.Control.If(v.DataTable.dtLabels.Exists)
		F.Data.DataTable.DeleteRow("dtLabels")
	F.Intrinsic.Control.EndIf
	
	'Check if WO is currently opened by a user at x_lock_file table
	F.Intrinsic.Control.CallSub(checklockfile)
	
	F.Intrinsic.Control.If(V.Global.bLock,=,False)
		'Adding the record to BI_SF_AUDIT for audit trail printout
		F.Intrinsic.String.Build("select top 1 sequence from bi_sf_audit where trmnl = '{0}' and rptid = '001862' order by sequence desc",V.Caller.Terminal,V.Local.sQuery)
		F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sQuery)
		F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,True)
			V.Global.iBISeq.Set(1)
		F.Intrinsic.Control.Else
			F.Intrinsic.Math.ConvertToLong(V.ODBC.conx!rst.FieldValTrim!sequence,V.Global.iBISeq)
			F.Intrinsic.Math.Add(V.Global.iBISeq,1,V.Global.iBISeq)
		F.Intrinsic.Control.EndIf
		F.ODBC.conx!rst.Close
		F.Intrinsic.String.LPad(V.Global.iBISeq,"0",9,V.Local.sSeq)
		F.Intrinsic.String.DateString(V.Ambient.Date,V.Local.sDate)
		V.Local.sPart.Set(V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim)
		
		F.Intrinsic.String.Len(V.Local.sPart,V.Local.iLen)
		
		F.Intrinsic.Control.If(V.Local.iLen,>,17)
			F.Intrinsic.String.Mid(V.Local.sPart,17,V.Local.sRev)
			F.Intrinsic.String.Left(V.Local.sPart,17,V.Local.sPart)
		F.Intrinsic.Control.Else
			V.Local.sRev.Set("")
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.String.Left(V.DataTable.dtRequest(V.Global.iReq).Description!FieldValTrim,30,V.Local.sDescription)
		F.Intrinsic.String.Format(V.Local.fTotal,"#,0.0000",V.Local.sQtyIssue)
		F.Intrinsic.String.Build("insert into BI_SF_AUDIT(trmnl, rptid, sequence, rec_type, trans, job, suffix, category, descr, reference, tran_date, qty_1, heading) values('{0}','001862','{1}','L','02','{2}','{3}','{4}','{5}','{6}','{7}',{8},'Audit Trail for Issue of Materials to Work Orders')",V.Caller.Terminal,V.Local.sSeq.Trim,V.DataTable.dtRequest(V.Global.iReq).Job!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Sequence!FieldValTrim,V.Local.sDescription.PSQLFriendly,V.Local.sPart.PSQLFriendly,V.Local.sDate.Trim,V.Local.fTotal,V.Local.sQuery)
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
		F.Intrinsic.Math.Add(V.Global.iBISeq,1,V.Global.iBISeq)
		F.Intrinsic.String.LPad(V.Global.iBISeq,"0",9,V.Local.sSeq)
		F.Intrinsic.String.Build("Request {0} - {1}",V.DataTable.dtRequest(V.Global.iReq).ReqID!FieldValLong,V.DataTable.dtRequest(V.Global.iReq).Line!FieldValLong,V.Local.sReference)
		F.Intrinsic.String.Build("Area: {0}",V.DataTable.dtRequest(V.Global.iReq).Area!FieldValTrim,V.Local.sDescription)
		F.Intrinsic.String.Build("insert into BI_SF_AUDIT(trmnl, rptid, sequence, rec_type, descr, reference, heading) values('{0}','001862','{1}','L','{2}','{3}','Audit Trail for Issue of Materials to Work Orders')",V.Caller.Terminal,V.Local.sSeq.Trim,V.Local.sDescription.PSQLFriendly,V.Local.sReference.Trim,V.Local.sQuery)
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
		F.Intrinsic.Control.For(V.Local.i1,V.DataTable.dtLot.RowCount--,0,-1)
			F.Intrinsic.Control.If(V.DataTable.dtLot(V.Local.i1).Issue!FieldValFloat,>,0)
				'Use 450100 library to issue
				F.Intrinsic.String.Format(V.DataTable.dtLot(V.Local.i1).Issue!FieldValFloat,"0.0000",V.Local.sQtyIssue)
				V.Local.sBin.Set(V.DataTable.dtLot(V.Local.i1).Bin!FieldValTrim)
				V.Local.sHeat.Set(V.DataTable.dtLot(V.Local.i1).Heat!FieldValTrim)
				V.Local.sLot.Set(V.DataTable.dtLot(V.Local.i1).Lot!FieldValTrim)
				V.Local.sSerial.Set(V.DataTable.dtLot(V.Local.i1).Serial!FieldValTrim)
				
				F.Intrinsic.String.Format(V.Ambient.Now,"HhNnSs",V.Local.sTranTimeBegin)
				F.Intrinsic.String.Concat(V.Local.sTranTimeBegin,"00",V.Local.sTranTimeBegin)
				
				F.Data.DataTable.AddRow("450100","Part",V.Local.sPart.Trim,"Rev",V.Local.sRev.Trim,"Location",V.DataTable.dtRequest(V.Global.iReq).Loc!FieldValTrim,"Quantity",V.Local.sQtyIssue,"Lot",V.Local.sLot.Trim,"Bin",V.Local.sBin.Trim,"Heat",V.Local.sHeat.Trim,"Serial",V.Local.sSerial.Trim,"WONumber",V.DataTable.dtRequest(V.Global.iReq).Job!FieldValTrim,"WOSuffix",V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldValTrim,"WOSeq",V.DataTable.dtRequest(V.Global.iReq).Sequence!FieldValTrim)

				F.Intrinsic.Control.CallSub(450100Sync)
'				'Preparing file name to be called by callwrapper
'				F.Intrinsic.String.Concat("I",V.Caller.CompanyCode,"IF",V.Caller.Terminal,V.Local.sParam)
'				F.Intrinsic.String.Concat(V.Caller.FilesDir,"\",V.Local.sParam,V.Local.sFileName)
'				
'				V.Local.sPart.Set(V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim)
'				F.Intrinsic.String.Len(V.Local.sPart,V.Local.iLen)
'				F.Intrinsic.Control.If(V.Local.iLen,>,17)
'					F.Intrinsic.String.Mid(V.Local.sPart,17,V.Local.sRev)
'					F.Intrinsic.String.Left(V.Local.sPart,17,V.Local.sPart)
'				F.Intrinsic.Control.Else
'					V.Local.sRev.Set("")
'				F.Intrinsic.Control.EndIf
'				F.Intrinsic.String.Format(V.DataTable.dtLot(V.Local.i1).Issue!FieldValFloat,"0.0000",V.Local.sQtyIssue)
'			
'				V.Local.sBin.Set(V.DataTable.dtLot(V.Local.i1).Bin!FieldValTrim)
'				V.Local.sHeat.Set(V.DataTable.dtLot(V.Local.i1).Heat!FieldValTrim)
'				V.Local.sLot.Set(V.DataTable.dtLot(V.Local.i1).Lot!FieldValTrim)
'				V.Local.sSerial.Set(V.DataTable.dtLot(V.Local.i1).Serial!FieldValTrim)
'			
'				'Preparing the file format
'				F.Intrinsic.String.Concat(V.Local.sPart.Trim,",",V.Local.sRev.Trim,",",V.DataTable.dtRequest(V.Global.iReq).Loc!FieldValTrim,",",V.Local.sQtyIssue.Trim,",",V.Local.sLot.Trim,",",V.Local.sBin.Trim,",",V.Local.sHeat.Trim,V.Local.sFile)
'				F.Intrinsic.String.Concat(V.Local.sFile,",",V.Local.sSerial.Trim,",",V.DataTable.dtRequest(V.Global.iReq).Job!FieldValTrim,",",V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldValTrim,",",V.DataTable.dtRequest(V.Global.iReq).Sequence!FieldValTrim,V.Local.sFile)
'				F.Intrinsic.File.String2File(V.Local.sFileName,V.Local.sFile)
'				F.Global.General.CallWrapperSync(450100,V.Local.sParam)

				F.Intrinsic.String.Format(V.Ambient.Now,"HhNnSs",V.Local.sTranTimeEnd)
				F.Intrinsic.String.Concat(V.Local.sTranTimeEnd,"99",V.Local.sTranTimeEnd)
				
				'Check if issued transaction is successful
				F.Intrinsic.String.Format(V.Ambient.Date,"YYMMDD",V.Local.sIssueDate)
				V.Local.dIssued.Set(V.Ambient.Date)
				V.Local.sUser.Set(V.Caller.User)
				F.Intrinsic.Math.Mult(-1,V.DataTable.dtLot(V.Local.i1).Issue!FieldValFloat,V.Local.fQtyIssued)
'				F.Intrinsic.String.Build("select part from inventory_hist where date_history = '{0}' and part = '{1}' and job = '{2}' and suffix = '{3}' and seq = '{4}' and quantity = {5} and userid = '{6}' and code_transaction = 'J55'",V.Local.sIssueDate.Trim,V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Job!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Sequence!FieldValTrim,V.Local.fQtyIssued,V.Local.sUser.Trim,V.Local.sQuery)
				F.Intrinsic.String.Build("select part from inventory_hist where date_history = '{0}' and part = '{1}' and job = '{2}' and suffix = '{3}' and seq = '{4}' and quantity = {5} and userid = '{6}' and inv_hist_time >= '{7}' and inv_hist_time <= '{8}' and code_transaction = 'J55'",V.Local.sIssueDate.Trim,V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Job!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Sequence!FieldValTrim,V.Local.fQtyIssued,V.Local.sUser.Trim,V.Local.sTranTimeBegin,V.Local.sTranTimeEnd,V.Local.sQuery)
				F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sQuery)
				F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)
'					F.ODBC.conx!rst.Close
'					'Check JOB_TRANS_ERR if issue is failed
'					F.Intrinsic.String.Build("select description, msg_id, filename from v_job_trans_err where job = '{0}' and suffix = '{1}' and seq = '{2}' and part = '{3}' and tran_date = '{4}' and program = 'JB0320'",V.DataTable.dtRequest(V.Global.iReq).Job!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Sequence!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim,V.Local.dIssued.PervasiveDate,V.Local.sQuery)
'					F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sQuery)
'					F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)
'						F.Intrinsic.String.Build("There was an error in material issue with the following description: {1}{0}Message ID: {2}, Filename: {3}{0}For work order: {4}-{5}, sequence: {6}, part: {7}",V.Ambient.NewLine,V.ODBC.conx!rst.FieldVal!description,V.ODBC.conx!rst.FieldVal!msg_id,V.ODBC.conx!rst.FieldVal!filename,V.DataTable.dtRequest(V.Global.iReq).Job!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Sequence!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim,V.Local.sMessage)
'						F.Intrinsic.UI.Msgbox(V.Local.sMessage,"Issue Material Request [ARC 4360]")
'					F.Intrinsic.Control.Else					
						F.Intrinsic.String.Format(V.Ambient.Now,"YYYY-MM-DD HH:NN:SS",V.Local.sIssueDate)
						
						F.Intrinsic.Math.Add(V.Global.iBISeq,1,V.Global.iBISeq)
						F.Intrinsic.String.LPad(V.Global.iBISeq,"0",9,V.Local.sSeq)
						F.Intrinsic.String.Build("insert into BI_SF_AUDIT(trmnl, rptid, sequence, rec_type, qty_2, lot, bin, heat, serial, heading) values('{0}','001862','{1}','L1',{2},'{3}','{4}','{5}','{6}','Audit Trail for Issue of Materials to Work Orders')",V.Caller.Terminal,V.Local.sSeq.Trim,V.DataTable.dtLot(V.Local.i1).Issue!FieldValFloat,V.Local.sLot.Trim,V.Local.sBin.Trim,V.Local.sHeat.Trim,V.Local.sSerial.Trim,V.Local.sQuery)
						F.ODBC.Connection!conx.Execute(V.Local.sQuery)
						
						'Populate the issued record to dtLabels
						v.Local.bIssueSuccess.Set(True)
						
						'This is specific to TEST TOOLING SOLUTIONS only
						F.Intrinsic.String.Build("select USER_DEFINED_PART from INV_CROSS_REF where VENDOR = '' AND MFG_PART = 'TTS' AND PART = '{0}';",V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim,v.Local.sQuery)
						F.ODBC.Connection!conx.ExecuteAndReturn(v.Local.sQuery,v.Local.sRetValue)
						F.Intrinsic.Control.If(v.Local.sRetValue.Trim,!=,"")
							f.Intrinsic.String.Split(v.Local.sRetValue,"#$#",v.Local.sRetValue)
							v.Local.sOldPartNumber.Set(v.Local.sRetValue(0).Trim)
						F.Intrinsic.Control.Else
							v.Local.sOldPartNumber.Set("")
						F.Intrinsic.Control.EndIf
										
						'Format Date Issued as String
						F.Intrinsic.String.Format(v.Local.dIssued,"d-mmm-yyyy",v.Local.sDateIssued)
						
						'Populate dtLabels
						F.Data.DataTable.AddRow("dtLabels","ReqID",V.DataTable.dtRequest(V.Global.iReq).ReqID!FieldVal,"ReqLine",V.DataTable.dtRequest(V.Global.iReq).Line!FieldVal,"Part",V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim,"Description",V.DataTable.dtRequest(V.Global.iReq).Description!FieldValTrim,"DateIssued",v.Local.sDateIssued,"QtyIssued",V.Local.sQtyIssue.Float,"Lot",V.Local.sLot.Trim,"Bin",V.Local.sBin.Trim,"Heat",V.Local.sHeat.Trim,"Serial",V.Local.sSerial.Trim,"WONumber",V.DataTable.dtRequest(V.Global.iReq).Job!FieldValTrim,"WOSuffix",V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldValTrim,"WOSeq",V.DataTable.dtRequest(V.Global.iReq).Sequence!FieldValTrim,"OldPartNum",v.Local.sOldPartNumber,"QtyOnLabel",V.Local.sQtyIssue.Float,"LABEL_COPY",1)
						
'					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.Else

					'Transaction is not successful, substract the total issue qty with the lot/bin issue qty
					F.Intrinsic.String.Build("There was an error in material issue:{0}Request: {1}  Line: {2}{0}Work Order: {3}-{4}  sequence: {5}{0}Part: {6}",V.Ambient.NewLine,V.DataTable.dtRequest(V.Global.iReq).ReqID!FieldValLong,V.DataTable.dtRequest(V.Global.iReq).Line!FieldValLong,V.DataTable.dtRequest(V.Global.iReq).Job!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Sequence!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim,V.Local.sMessage)
					F.Intrinsic.String.Build("{0}{1}Failed issue from lot: {2}, bin: {3}, heat: {4}, serial: {5}",V.Local.sMessage,V.Ambient.NewLine,V.Local.sLot.Trim,V.Local.sBin.Trim,V.Local.sHeat.Trim,V.Local.sSerial.Trim,V.Local.sMessage)
					F.Intrinsic.UI.Msgbox(V.Local.sMessage,"Issue Material Request [ARC 4360]")
					F.Intrinsic.Math.Sub(V.Local.fTotal,V.DataTable.dtLot(V.Local.i1).Issue!FieldValFloat,V.Local.fTotal)
				F.Intrinsic.Control.EndIf
				F.ODBC.conx!rst.Close
			F.Intrinsic.Control.EndIf
			F.Data.DataTable.DeleteRow("dtLot",V.Local.i1)
		F.Intrinsic.Control.Next(V.Local.i1)
		F.Intrinsic.Math.Add(V.Global.iBISeq,1,V.Global.iBISeq)
		F.Intrinsic.String.LPad(V.Global.iBISeq,"0",9,V.Local.sSeq)
		F.Intrinsic.String.Build("insert into BI_SF_AUDIT(trmnl, rptid, sequence, rec_type, heading) values('{0}','001862','{1}','L1','Audit Trail for Issue of Materials to Work Orders')",V.Caller.Terminal,V.Local.sSeq.Trim,V.Local.sQuery)
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
		
		F.Intrinsic.Math.Add(V.Global.iBISeq,1,V.Global.iBISeq)
		F.Intrinsic.Math.Add(V.DataTable.dtRequest(V.Global.iReq).QtyIssued!FieldValTrim,V.Local.fTotal,V.Local.fQtyIssued)
		F.Intrinsic.String.Format(V.Ambient.Now,"YYYY-MM-DD HH:NN:SS",V.Local.sIssueDate)
		F.Intrinsic.Control.If(V.DataTable.dtRequest(V.Global.iReq).QtyReq!FieldValTrim,<=,V.Local.fQtyIssued)
'			F.Intrinsic.String.Build("update INA_MAT_REQ_LINE set qty_issued = {2}, status = 1, last_issued = '{3}' where req_id = {0} and req_seq = {1}",V.DataTable.dtRequest(V.Global.iReq).ReqID!FieldValLong,V.DataTable.dtRequest(V.Global.iReq).Line!FieldValLong,V.Local.fQtyIssued,V.Local.sIssueDate.Trim,V.Local.sQuery)
			F.Intrinsic.String.Build("update INA_MAT_REQ_LINE set qty_issued = qty_issued + {2}, status = 1, last_issued = '{3}' where req_id = {0} and req_seq = {1}",V.DataTable.dtRequest(V.Global.iReq).ReqID!FieldValLong,V.DataTable.dtRequest(V.Global.iReq).Line!FieldValLong,V.Local.fTotal,V.Local.sIssueDate.Trim,V.Local.sQuery)
			F.ODBC.Connection!conx.Execute(V.Local.sQuery)
			
			F.Intrinsic.String.Build("Part = '{0}' and Loc = '{1}'",V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Loc!FieldValTrim,V.Local.sFilter)
			F.Intrinsic.Math.Sub(V.DataTable.dtRequest(V.Global.iReq).Onhand!FieldValFloat,V.Local.fTotal,V.Local.fQtyRem)
			F.Intrinsic.Control.If(V.Local.fQtyRem,<,0)
				V.Local.fQtyRem.Set(0)
			F.Intrinsic.Control.EndIf
			F.Data.DataTable.Select("dtRequest",V.Local.sFilter,V.Local.sRows)
			F.Intrinsic.Control.If(v.Local.sRows,<>,"***NORETURN***")
				F.Intrinsic.String.Split(V.Local.sRows,"*!*",V.Local.sRows)
				F.Intrinsic.Control.For(V.Local.i1,0,V.Local.sRows.UBound,1)
					F.Data.DataTable.SetValue("dtRequest",V.Local.sRows(V.Local.i1),"Onhand",V.Local.fQtyRem)
				F.Intrinsic.Control.Next(V.Local.i1)
			F.Intrinsic.Control.EndIf
'			F.Intrinsic.String.Split(V.Local.sRows,"*!*",V.Local.sRows)
'			F.Intrinsic.Control.If(V.Local.sRows.UBound,>,0)
'				F.Intrinsic.Control.For(V.Local.i1,0,V.Local.sRows.UBound,1)
'					F.Data.DataTable.SetValue("dtRequest",V.Local.sRows(V.Local.i1),"Onhand",V.Local.fQtyRem)
'				F.Intrinsic.Control.Next(V.Local.i1)
'			F.Intrinsic.Control.EndIf
			F.Data.DataTable.DeleteRow("dtRequest",V.Global.iReq)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("select qty_issued from INA_MAT_REQ_LINE where req_id = {0} and req_seq = {1};",V.DataTable.dtRequest(V.Global.iReq).ReqID!FieldValLong,V.DataTable.dtRequest(V.Global.iReq).Line!FieldValLong,v.Local.sQuery)
			F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sQuery,v.Local.sRet)
			F.Intrinsic.Control.If(v.Local.sRet.Trim,=,"")
				v.Local.fQtyAlreadyIssued.Set(0)
			F.Intrinsic.Control.Else
				v.Local.fQtyAlreadyIssued.Set(v.Local.sRet.Float)
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Math.Add(V.Local.fTotal,v.Local.fQtyAlreadyIssued,v.Local.fQtyAlreadyIssued)
'			F.Intrinsic.String.Build("update INA_MAT_REQ_LINE set qty_issued = {2}, last_issued = '{3}' where req_id = {0} and req_seq = {1}",V.DataTable.dtRequest(V.Global.iReq).ReqID!FieldValLong,V.DataTable.dtRequest(V.Global.iReq).Line!FieldValLong,V.Local.fQtyIssued,V.Local.sIssueDate.Trim,V.Local.sQuery)
			F.Intrinsic.Control.If(v.Local.fQtyAlreadyIssued,>=,V.DataTable.dtRequest(V.Global.iReq).QtyReq!FieldValFloat)
				F.Intrinsic.String.Build("update INA_MAT_REQ_LINE set qty_issued = qty_issued + {2}, status = 1, last_issued = '{3}' where req_id = {0} and req_seq = {1}",V.DataTable.dtRequest(V.Global.iReq).ReqID!FieldValLong,V.DataTable.dtRequest(V.Global.iReq).Line!FieldValLong,V.Local.fTotal,V.Local.sIssueDate.Trim,V.Local.sQuery)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("update INA_MAT_REQ_LINE set qty_issued = qty_issued + {2}, last_issued = '{3}' where req_id = {0} and req_seq = {1}",V.DataTable.dtRequest(V.Global.iReq).ReqID!FieldValLong,V.DataTable.dtRequest(V.Global.iReq).Line!FieldValLong,V.Local.fTotal,V.Local.sIssueDate.Trim,V.Local.sQuery)
			F.Intrinsic.Control.EndIf
			F.ODBC.Connection!conx.Execute(V.Local.sQuery)
			
			F.Intrinsic.Math.Sub(V.DataTable.dtRequest(V.Global.iReq).Request!FieldValTrim,V.Local.fTotal,V.Local.fQtyRem)
'			F.Data.DataTable.SetValue("dtRequest",V.Global.iReq,"Request",V.Local.fQtyRem)
			F.Data.DataTable.SetValue("dtRequest",V.Global.iReq,"Request",V.Local.fQtyRem,"Issue",V.Local.fQtyRem,"QtyIssued",v.Local.fQtyAlreadyIssued)
			
			F.Intrinsic.String.Build("Part = '{0}' and Loc = '{1}'",V.DataTable.dtRequest(V.Global.iReq).Part!FieldValTrim,V.DataTable.dtRequest(V.Global.iReq).Loc!FieldValTrim,V.Local.sFilter)
			F.Intrinsic.Math.Sub(V.DataTable.dtRequest(V.Global.iReq).Onhand!FieldValFloat,V.Local.fTotal,V.Local.fQtyRem)
			F.Intrinsic.Control.If(V.Local.fQtyRem,<,0)
				V.Local.fQtyRem.Set(0)
			F.Intrinsic.Control.EndIf
			F.Data.DataTable.Select("dtRequest",V.Local.sFilter,V.Local.sRows)
			F.Intrinsic.Control.If(v.Local.sRows,<>,"***NORETURN***")
				F.Intrinsic.String.Split(V.Local.sRows,"*!*",V.Local.sRows)
				F.Intrinsic.Control.For(V.Local.i1,0,V.Local.sRows.UBound,1)
					F.Data.DataTable.SetValue("dtRequest",V.Local.sRows(V.Local.i1),"Onhand",V.Local.fQtyRem)
				F.Intrinsic.Control.Next(V.Local.i1)
			F.Intrinsic.Control.EndIf
'			F.Intrinsic.String.Split(V.Local.sRows,"*!*",V.Local.sRows)
'			F.Intrinsic.Control.If(V.Local.sRows.UBound,>,0)
'				F.Intrinsic.Control.For(V.Local.i1,0,V.Local.sRows.UBound,1)
'					F.Data.DataTable.SetValue("dtRequest",V.Local.sRows(V.Local.i1),"Onhand",V.Local.fQtyRem)
'				F.Intrinsic.Control.Next(V.Local.i1)
'			F.Intrinsic.Control.EndIf
			Gui.F_IssueRequest.GsGCRequest.SetRowAppearance("gvReq",V.Global.iReq,"backcolor","White")
			F.Intrinsic.Control.If(v.Local.fQtyAlreadyIssued,>=,V.DataTable.dtRequest(V.Global.iReq).QtyReq!FieldValFloat)
				F.Data.DataTable.DeleteRow("dtRequest",V.Global.iReq)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	Gui.F_IssueRequest.frameLotBin.Enabled(False)
	Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Issue","ReadOnly",False)
	Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Issue","AllowEdit",True)
	Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Submit","AllowEdit",False)
	F.Intrinsic.UI.CloseWaitDialog
	
	'Check whether the Issue is successfull
	F.Intrinsic.Control.If(v.Local.bIssueSuccess)
	
		'Ask whether to print Label if Report is activated
		F.Intrinsic.Control.If(v.Global.iRptID,!=,-1,AND,v.Global.bRptSeqActive,=,True,v.Global.bSentinelActive,=,True)
			F.Intrinsic.UI.Msgbox("Print Label?","Issue Material Request [ARC 4360]",4,v.Local.iRet)
			F.Intrinsic.Control.If(v.Local.iRet,=,6)				
							
				Gui.F_Labels.GsGcLabels.AddGridviewFromDatatable("gvLabels","dtLabels")
				Gui.F_Labels.GsGcLabels.MainView("gvLabels")
				
				F.Intrinsic.Control.CallSub(FormatGvLabels)
				
				'Initialize Printer
				f.Intrinsic.Control.CallSub(InitializePrinter)
				
				Gui.F_Labels..Show
				Gui.F_Labels..SetFocus
				
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.else
	F.Intrinsic.UI.Msgbox("Please select lot/bin to continue","Issue Material Request [ARC 4360]")
F.Intrinsic.Control.EndIf
Program.Sub.LotBin_Issue.End

Program.Sub.LotBin_Cancel.Start
V.Local.i1.Declare

F.Intrinsic.Control.For(V.Local.i1,V.DataTable.dtLot.RowCount--,0,-1)
	F.Data.DataTable.DeleteRow("dtLot",V.Local.i1)
F.Intrinsic.Control.Next(V.Local.i1)
Gui.F_IssueRequest.frameLotBin.Enabled(False)
Gui.F_IssueRequest.GsGCRequest.SetRowAppearance("gvReq",V.Global.iReq,"backcolor","White")
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Issue","ReadOnly",False)
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Issue","AllowEdit",True)
Gui.F_IssueRequest.GsGCRequest.SetColumnProperty("gvReq","Submit","AllowEdit",False)
Program.Sub.LotBin_Cancel.End

Program.Sub.PrintAuditTrail.Start
'Print audit material audit trail (Report ID 1862)
V.Local.sBIParam.Declare(String)
V.Local.sBIParamVal.Declare(String)

F.Intrinsic.String.Split("Terminal*!*Rptid*!*Program*!*HIDECOST","*!*",V.Local.sBIParam)
F.Intrinsic.String.Concat(V.Caller.Terminal,"*!*001862*!*GAB_4360_ISSUE_MATERIAL_REQUEST.g2u*!*Y",V.Local.sBIParamVal)
F.Intrinsic.String.Split(V.Local.sBIParamVal,"*!*",V.Local.sBIParamVal)
F.Global.BI.PrintReport("001862",16,V.Local.sBIParam,V.Local.sBIParamVal,"GSView",False)
Program.Sub.PrintAuditTrail.End

Program.Sub.ExportGrid.Start
V.Local.sFileExport.Declare
V.Local.bExcel.Declare
V.Local.bFileLocked.Declare
V.Local.sFilePath.Declare
V.Local.sMsg.Declare

F.Automation.MSExcel.CheckPresence(V.Local.bExcel)

'Display the Save Dialog
F.Intrinsic.Control.If(V.Local.bExcel,=,True)
	F.Intrinsic.UI.ShowSaveFileDialog("","*.xlsx|",V.Local.sFilePath)
F.Intrinsic.Control.Else
	F.Intrinsic.UI.ShowSaveFileDialog("","*.csv|",V.Local.sFilePath)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Local.sFilePath,<>,"***CANCEL***")
'	F.Intrinsic.String.Format(V.Ambient.Date,"YYYYMMDD",V.Local.sMsg)
	V.Local.sFileExport.Set(V.Local.sFilePath)
'	F.Intrinsic.String.Build("{0}{1}\Desktop\Master_Dashboard_{2}",V.System.HomeDrive,V.System.HomePath,V.Local.sMsg.Trim,V.Local.sFileExport)
	F.Intrinsic.Control.If(V.Local.bExcel,=,True)
		F.Intrinsic.String.Concat(V.Local.sFileExport,".xlsx",V.Local.sFileExport)
		Gui.F_IssueRequest.GsGCRequest.Export(V.Local.sFileExport,"xlsx")
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Concat(V.Local.sFileExport,".csv",V.Local.sFileExport)
		Gui.F_IssueRequest.GsGCRequest.Export(V.Local.sFileExport,"csv")
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Concat("Grid has been exported to ",V.Local.sFileExport,V.Local.sMsg)
	F.Intrinsic.UI.Msgbox(V.Local.sMsg)
	F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
F.Intrinsic.Control.EndIf
Program.Sub.ExportGrid.End

Program.Sub.CheckLockFile.Start
V.Local.sJob.Declare
V.Local.sSQL.Declare
V.Local.sSuffix.Declare

V.Local.sJob.Set(V.DataTable.dtRequest(V.Global.iReq).Job!FieldVal)
V.Local.sSuffix.Set(V.DataTable.dtRequest(V.Global.iReq).Suffix!FieldVal)

F.Intrinsic.String.Build("select user_id from x_lock_file where company = '{0}' and lock_type = 'WO' and rec_key = '{1}-{2}'",V.Caller.CompanyCode,V.Local.sJob,V.Local.sSuffix,V.Local.sSQL)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)
	V.Global.bLock.Set(True)
	F.Intrinsic.String.Build("Issue material cannot be processed. WO {0}-{1} is currently being opened by user {2}",V.Local.sJob,V.Local.sSuffix,V.ODBC.conx!rst.FieldVal!user_id,V.Local.sSQL)
	F.Intrinsic.UI.Msgbox(V.Local.sSQL,"Issue Material Request [ARC 4360]")
F.Intrinsic.Control.Else
	V.Global.bLock.Set(False)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close
Program.Sub.CheckLockFile.End

Program.Sub.cmdPrintLabel_Click.Start
	V.Local..BulkDeclareString(sPrinter,sFileName)
	V.Local..BulkDeclareLong(iUser)
	
	F.Intrinsic.Control.Try
		
		F.Intrinsic.Control.If(v.Screen.F_Labels!ddlPrinter.Text.Trim,<>,"")
			'Save selected printer to the registry so next time we can load it as the default selection...
			F.Global.Security.GetUserID(V.Caller.User,V.Caller.CompanyCode,V.Local.iUser)
			F.Intrinsic.File.GetFileNameFromFQN(V.Caller.ScriptFile,V.Local.sFileName)
			F.Intrinsic.String.Left(V.Local.sFileName,50,V.Local.sFileName)
			F.Global.Registry.AddValue(V.Local.iUser,V.Caller.CompanyCode,V.Local.sFileName,V.Global.iRptID,1000,False,V.Screen.F_Labels!ddlPrinter.Text,False,0,-999.0,1/1/1980,12:00:00 AM)
			
			V.Global.sPrinter.Set(V.Screen.F_Labels!ddlPrinter.Text)
			
			'Load Data Label
			f.Intrinsic.Control.CallSub(LoadDataLabel)
		F.Intrinsic.Control.Else
			F.Intrinsic.UI.Msgbox("No printer selected.","Select Printer")
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.CallSub(F_Labels_UnLoad)
		
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.CallSub(Unload)
	F.Intrinsic.Control.EndTry
Program.Sub.cmdPrintLabel_Click.End

Program.Sub.LoadDataLabel.Start
	F.Intrinsic.Control.Try

		'Get run ID
		F.Global.BI.GetRunID(V.Global.iBIRunID)
		
		'Start BI Logging
		F.Global.BI.StartLogging(V.Global.iBIRunID,V.Global.iRptID,-1,"",V.Global.iBILogID)
		
		'Pass Data to Codesoft
		F.Global.BI.PrintCodesoftLabelFromDataTable(V.Global.iBIRunID,V.Global.iBILogID,"dtLabels",V.Global.sPrinter,True)
		
		'Stop BI Logging
		F.Global.BI.StopLogging(V.Global.iBILogID)
		
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.CallSub(Unload)
	F.Intrinsic.Control.EndTry
Program.Sub.LoadDataLabel.End

Program.Sub.InitializePrinter.Start
	V.Local..BulkDeclareString(sSql,sSavedPrinter,sFileName,sUser)
	V.Local..BulkDeclareLong(iUser)

	F.Intrinsic.Control.Try
		
		'Getting printer list for Sentinel
		V.Local.sSql.Set("Select PrinterName, SentinelAlias from SERVER_PRINTERS where SentinelEnabled = 1")
		F.ODBC.Connection!conc.OpenLocalRecordsetRO("rstPrinters",V.Local.sSql)
		F.Intrinsic.Control.DoUntil(V.ODBC.conc!rstPrinters.EOF,=,True)
			F.Intrinsic.Control.If(V.ODBC.conc!rstPrinters.FieldValTrim!SentinelAlias,=,"")
				Gui.F_Labels.ddlPrinter.AddItem(V.ODBC.conc!rstPrinters.FieldValTrim!PrinterName)
			F.Intrinsic.Control.Else
				Gui.F_Labels.ddlPrinter.AddItem(V.ODBC.conc!rstPrinters.FieldValTrim!SentinelAlias)
			F.Intrinsic.Control.EndIf
			F.ODBC.conc!rstPrinters.MoveNext
		F.Intrinsic.Control.Loop
		F.ODBC.conc!rstPrinters.Close
		
		'Retrieve Last Printer Selection...
		F.Global.Security.GetUserID(V.Caller.User,V.Caller.CompanyCode,V.Local.iUser)
		F.Intrinsic.File.GetFileNameFromFQN(V.Caller.ScriptFile,V.Local.sFileName)
		F.Intrinsic.String.Left(V.Local.sFileName.UCase,50,V.Local.sFileName)
		F.Global.Registry.ReadValue(V.Local.iUser,V.Caller.CompanyCode,V.Local.sFileName,V.Global.iRptID,1000,5,"",V.Local.sSavedPrinter)
		Gui.F_Labels.ddlPrinter.Text(V.Local.sSavedPrinter)

		
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.CallSub(Unload)
	F.Intrinsic.Control.EndTry
Program.Sub.InitializePrinter.End

Program.Sub.GsGcLabels_CellValueChanged.Start
	v.Local.fQtyOnLabel.Declare
	
	F.Intrinsic.Control.Try
		
		F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
			F.Intrinsic.Control.Case("LABEL_COPY")
				F.Intrinsic.Math.Div(v.DataTable.dtLabels(v.Args.RowIndex).QtyIssued!FieldVal,v.Args.Value.Long,v.Local.fQtyOnLabel)
				F.Data.DataTable.SetValue("dtLabels",v.Args.RowIndex,"QtyOnLabel",v.Local.fQtyOnLabel)
				F.Data.DataTable.AcceptChanges("dtLabels")
		
		F.Intrinsic.Control.EndSelect
		
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.CallSub(Unload)
	F.Intrinsic.Control.EndTry
Program.Sub.GsGcLabels_CellValueChanged.End

Program.Sub.Comments.Start
${$0$}$Issue Material Request$}$MHERTANTO$}$20/6/2017 11:12:57 PM$}$True
${$3$}$0$}$$}$0$}$-1$}$$}$12:00:00 AM$}$This program is to be used by warehouse staff to process issue request made by production staffs. The request is submitted through another interface (GAB_4360_MATERIAL_REQUEST.g2u)
${$5$}$2.0.0.0$}$2
${$6$}$dyunus$}$20240314110926029$}$xZ6SHi8g7O0Qsxe6AiO2NH3PnOKQRy0TsQ8KcKnknQS/8BLjCbwhI3OQhaA1W1F/RT7aXOvPeo0=
Program.Sub.Comments.End